{"ast":null,"code":"import _objectSpread from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _slicedToArray from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{parseSaudiaDate}from\"../utils/commonFunctions\";import{add,formatISO,startOfMonth,startOfYear,endOfMonth,endOfYear}from\"date-fns\";import equal from\"fast-deep-equal\";import{memo,useState}from\"react\";import ReactCalendar from\"react-calendar\";import{ChevronLeft,ChevronsLeft,ChevronRight,ChevronsRight}from\"react-feather\";import{useSwipeable}from\"react-swipeable\";import{jsx as _jsx}from\"react/jsx-runtime\";function Calendar(_ref){var date=_ref.date,dates=_ref.dates,slider=_ref.slider;var _useState=useState(\"month\"),_useState2=_slicedToArray(_useState,2),view=_useState2[0],setView=_useState2[1];var _useState3=useState(parseSaudiaDate(date)),_useState4=_slicedToArray(_useState3,2),activeStartDate=_useState4[0],setActiveStartDate=_useState4[1];var minDate=parseSaudiaDate(dates[0]);var maxDate=parseSaudiaDate(dates[dates.length-1]);var isDateDisabled=function isDateDisabled(_ref2){var date=_ref2.date,view=_ref2.view;return view===\"month\"&&!dates.includes(formatISO(date,{representation:\"date\"}));};var handleCalendarClick=function handleCalendarClick(value){var clickedDate=formatISO(value,{representation:\"date\"});slider.moveToSlide(dates.indexOf(clickedDate));};var handleViewButton=function handleViewButton(_ref3){var view=_ref3.view;setView(view);};var handleNavigationButton=function handleNavigationButton(_ref4){var activeStartDate=_ref4.activeStartDate;setActiveStartDate(activeStartDate);};var handleNavigation=function handleNavigation(direction){var newDate=add(activeStartDate,view===\"month\"?{months:direction}:{years:direction});var lower=view===\"month\"?startOfMonth(minDate):startOfYear(minDate);var upper=view===\"month\"?endOfMonth(maxDate):endOfYear(maxDate);if(lower<=newDate&&newDate<=upper){setActiveStartDate(newDate);}};var swipeHandlers=useSwipeable({onSwipedRight:handleNavigation.bind(this,-1),onSwipedLeft:handleNavigation.bind(this,1)});var handleWheel=function handleWheel(event){if(event.deltaX!==0){handleNavigation(Math.sign(event.deltaX));}};return/*#__PURE__*/_jsx(\"div\",_objectSpread(_objectSpread({className:\"Calendar\",onWheel:handleWheel},swipeHandlers),{},{children:/*#__PURE__*/_jsx(ReactCalendar,{value:parseSaudiaDate(date),tileDisabled:isDateDisabled,minDate:minDate,maxDate:maxDate,activeStartDate:activeStartDate,view:view,onActiveStartDateChange:handleNavigationButton,onViewChange:handleViewButton,minDetail:\"year\",showFixedNumberOfWeeks:true,onChange:handleCalendarClick,prevLabel:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChevronLeft,{size:18})}),nextLabel:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChevronRight,{size:18})}),prev2Label:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChevronsLeft,{size:18})}),next2Label:/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsx(ChevronsRight,{size:18})})})}));}var isEqual=function isEqual(prevProps,currProps){if(!equal(currProps.date,prevProps.date)){return false;}else if(!equal(currProps.dates,prevProps.dates)){return false;}return true;};export default/*#__PURE__*/memo(Calendar,isEqual);","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/src/components/Calendar.js"],"names":["parseSaudiaDate","add","formatISO","startOfMonth","startOfYear","endOfMonth","endOfYear","equal","memo","useState","ReactCalendar","ChevronLeft","ChevronsLeft","ChevronRight","ChevronsRight","useSwipeable","Calendar","date","dates","slider","view","setView","activeStartDate","setActiveStartDate","minDate","maxDate","length","isDateDisabled","includes","representation","handleCalendarClick","value","clickedDate","moveToSlide","indexOf","handleViewButton","handleNavigationButton","handleNavigation","direction","newDate","months","years","lower","upper","swipeHandlers","onSwipedRight","bind","onSwipedLeft","handleWheel","event","deltaX","Math","sign","isEqual","prevProps","currProps"],"mappings":"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","sourcesContent":["import { parseSaudiaDate } from \"../utils/commonFunctions\";\n\nimport {\n  add,\n  formatISO,\n  startOfMonth,\n  startOfYear,\n  endOfMonth,\n  endOfYear,\n} from \"date-fns\";\nimport equal from \"fast-deep-equal\";\nimport { memo, useState } from \"react\";\nimport ReactCalendar from \"react-calendar\";\nimport {\n  ChevronLeft,\n  ChevronsLeft,\n  ChevronRight,\n  ChevronsRight,\n} from \"react-feather\";\nimport { useSwipeable } from \"react-swipeable\";\n\nfunction Calendar({ date, dates, slider }) {\n  const [view, setView] = useState(\"month\");\n  const [activeStartDate, setActiveStartDate] = useState(parseSaudiaDate(date));\n\n  const minDate = parseSaudiaDate(dates[0]);\n  const maxDate = parseSaudiaDate(dates[dates.length - 1]);\n\n  const isDateDisabled = ({ date, view }) => {\n    return (\n      view === \"month\" &&\n      !dates.includes(formatISO(date, { representation: \"date\" }))\n    );\n  };\n\n  const handleCalendarClick = (value) => {\n    const clickedDate = formatISO(value, { representation: \"date\" });\n    slider.moveToSlide(dates.indexOf(clickedDate));\n  };\n\n  const handleViewButton = ({ view }) => {\n    setView(view);\n  };\n\n  const handleNavigationButton = ({ activeStartDate }) => {\n    setActiveStartDate(activeStartDate);\n  };\n\n  const handleNavigation = (direction) => {\n    const newDate = add(\n      activeStartDate,\n      view === \"month\" ? { months: direction } : { years: direction }\n    );\n    const lower =\n      view === \"month\" ? startOfMonth(minDate) : startOfYear(minDate);\n    const upper = view === \"month\" ? endOfMonth(maxDate) : endOfYear(maxDate);\n    if (lower <= newDate && newDate <= upper) {\n      setActiveStartDate(newDate);\n    }\n  };\n\n  const swipeHandlers = useSwipeable({\n    onSwipedRight: handleNavigation.bind(this, -1),\n    onSwipedLeft: handleNavigation.bind(this, 1),\n  });\n\n  const handleWheel = (event) => {\n    if (event.deltaX !== 0) {\n      handleNavigation(Math.sign(event.deltaX));\n    }\n  };\n\n  return (\n    <div className=\"Calendar\" onWheel={handleWheel} {...swipeHandlers}>\n      <ReactCalendar\n        value={parseSaudiaDate(date)}\n        tileDisabled={isDateDisabled}\n        {...{ minDate, maxDate, activeStartDate, view }}\n        onActiveStartDateChange={handleNavigationButton}\n        onViewChange={handleViewButton}\n        minDetail=\"year\"\n        showFixedNumberOfWeeks\n        onChange={handleCalendarClick}\n        prevLabel={\n          <div>\n            <ChevronLeft size={18} />\n          </div>\n        }\n        nextLabel={\n          <div>\n            <ChevronRight size={18} />\n          </div>\n        }\n        prev2Label={\n          <div>\n            <ChevronsLeft size={18} />\n          </div>\n        }\n        next2Label={\n          <div>\n            <ChevronsRight size={18} />\n          </div>\n        }\n      />\n    </div>\n  );\n}\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(currProps.date, prevProps.date)) {\n    return false;\n  } else if (!equal(currProps.dates, prevProps.dates)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(Calendar, isEqual);\n"]},"metadata":{},"sourceType":"module"}