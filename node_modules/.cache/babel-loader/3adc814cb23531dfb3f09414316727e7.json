{"ast":null,"code":"var _jsxFileName = \"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/StateDropdown.js\",\n    _s = $RefreshSig$();\n\nimport { MAP_META, STATE_NAMES } from '../constants';\nimport { useState, useCallback, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport { useTransition, animated } from 'react-spring';\nimport { useClickAway } from 'react-use';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst StateDropdown = ({\n  stateCode,\n  trail\n}) => {\n  _s();\n\n  const [showDropdown, setShowDropdown] = useState(false);\n  const dropdownRef = useRef();\n  const history = useHistory();\n  const {\n    t\n  } = useTranslation();\n  useClickAway(dropdownRef, () => {\n    setShowDropdown(false);\n  });\n  const transitions = useTransition(showDropdown, {\n    from: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999\n    },\n    enter: {\n      opacity: 1,\n      transform: 'translate3d(0, 0px, 0)',\n      zIndex: 999\n    },\n    leave: {\n      opacity: 0,\n      transform: 'translate3d(0, 2px, 0)',\n      zIndex: 999\n    },\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 20\n    }\n  });\n  const handleClick = useCallback(stateCodeItr => {\n    setShowDropdown(false);\n    history.push(`/state/${stateCodeItr}`);\n  }, [history]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"StateDropdown\",\n    ref: dropdownRef,\n    children: [/*#__PURE__*/_jsxDEV(animated.h1, {\n      className: \"state-name fadeInUp\",\n      style: trail,\n      onClick: setShowDropdown.bind(this, !showDropdown),\n      children: t(STATE_NAMES[stateCode])\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), transitions((style, item) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      className: \"dropdown\",\n      style,\n      children: Object.keys(MAP_META).filter(stateCodeItr => stateCodeItr !== 'TT' && stateCodeItr !== stateCode).sort((code1, code2) => STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])).map(stateCodeItr => /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"item\",\n        onClick: handleClick.bind(this, stateCodeItr),\n        children: t(STATE_NAMES[stateCodeItr])\n      }, stateCodeItr, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 37\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this)), showDropdown && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"backdrop\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(StateDropdown, \"QtJHBfgUmgkcZ0OfGvktPYSnkNM=\", false, function () {\n  return [useHistory, useTranslation, useClickAway, useTransition];\n});\n\n_c = StateDropdown;\nexport default StateDropdown;\n\nvar _c;\n\n$RefreshReg$(_c, \"StateDropdown\");","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/StateDropdown.js"],"names":["MAP_META","STATE_NAMES","useState","useCallback","useRef","useTranslation","useHistory","useTransition","animated","useClickAway","StateDropdown","stateCode","trail","showDropdown","setShowDropdown","dropdownRef","history","t","transitions","from","opacity","transform","zIndex","enter","leave","config","mass","tension","friction","handleClick","stateCodeItr","push","bind","style","item","Object","keys","filter","sort","code1","code2","localeCompare","map"],"mappings":";;;AAAA,SAAQA,QAAR,EAAkBC,WAAlB,QAAoC,cAApC;AAEA,SAAQC,QAAR,EAAkBC,WAAlB,EAA+BC,MAA/B,QAA4C,OAA5C;AACA,SAAQC,cAAR,QAA6B,eAA7B;AACA,SAAQC,UAAR,QAAyB,kBAAzB;AACA,SAAQC,aAAR,EAAuBC,QAAvB,QAAsC,cAAtC;AACA,SAAQC,YAAR,QAA2B,WAA3B;;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAACC,EAAAA,SAAD;AAAYC,EAAAA;AAAZ,CAAD,KAAwB;AAAA;;AAC1C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCZ,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAMa,WAAW,GAAGX,MAAM,EAA1B;AACA,QAAMY,OAAO,GAAGV,UAAU,EAA1B;AACA,QAAM;AAACW,IAAAA;AAAD,MAAMZ,cAAc,EAA1B;AAEAI,EAAAA,YAAY,CAACM,WAAD,EAAc,MAAM;AAC5BD,IAAAA,eAAe,CAAC,KAAD,CAAf;AACH,GAFW,CAAZ;AAIA,QAAMI,WAAW,GAAGX,aAAa,CAACM,YAAD,EAAe;AAC5CM,IAAAA,IAAI,EAAE;AACFC,MAAAA,OAAO,EAAE,CADP;AAEFC,MAAAA,SAAS,EAAE,wBAFT;AAGFC,MAAAA,MAAM,EAAE;AAHN,KADsC;AAM5CC,IAAAA,KAAK,EAAE;AACHH,MAAAA,OAAO,EAAE,CADN;AAEHC,MAAAA,SAAS,EAAE,wBAFR;AAGHC,MAAAA,MAAM,EAAE;AAHL,KANqC;AAW5CE,IAAAA,KAAK,EAAE;AACHJ,MAAAA,OAAO,EAAE,CADN;AAEHC,MAAAA,SAAS,EAAE,wBAFR;AAGHC,MAAAA,MAAM,EAAE;AAHL,KAXqC;AAgB5CG,IAAAA,MAAM,EAAE;AACJC,MAAAA,IAAI,EAAE,CADF;AAEJC,MAAAA,OAAO,EAAE,GAFL;AAGJC,MAAAA,QAAQ,EAAE;AAHN;AAhBoC,GAAf,CAAjC;AAuBA,QAAMC,WAAW,GAAG1B,WAAW,CAC1B2B,YAAD,IAAkB;AACdhB,IAAAA,eAAe,CAAC,KAAD,CAAf;AACAE,IAAAA,OAAO,CAACe,IAAR,CAAc,UAASD,YAAa,EAApC;AACH,GAJ0B,EAK3B,CAACd,OAAD,CAL2B,CAA/B;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAA+B,IAAA,GAAG,EAAED,WAApC;AAAA,4BACI,QAAC,QAAD,CAAU,EAAV;AACI,MAAA,SAAS,EAAC,qBADd;AAEI,MAAA,KAAK,EAAEH,KAFX;AAGI,MAAA,OAAO,EAAEE,eAAe,CAACkB,IAAhB,CAAqB,IAArB,EAA2B,CAACnB,YAA5B,CAHb;AAAA,gBAKKI,CAAC,CAAChB,WAAW,CAACU,SAAD,CAAZ;AALN;AAAA;AAAA;AAAA;AAAA,YADJ,EASKO,WAAW,CACR,CAACe,KAAD,EAAQC,IAAR,KACIA,IAAI,iBACA,QAAC,QAAD,CAAU,GAAV;AAAc,MAAA,SAAS,EAAC,UAAxB;AAAwCD,MAAAA,KAAxC;AAAA,gBACKE,MAAM,CAACC,IAAP,CAAYpC,QAAZ,EACIqC,MADJ,CAEQP,YAAD,IACIA,YAAY,KAAK,IAAjB,IAAyBA,YAAY,KAAKnB,SAHrD,EAKI2B,IALJ,CAKS,CAACC,KAAD,EAAQC,KAAR,KACFvC,WAAW,CAACsC,KAAD,CAAX,CAAmBE,aAAnB,CAAiCxC,WAAW,CAACuC,KAAD,CAA5C,CANP,EAQIE,GARJ,CAQSZ,YAAD,iBACD;AAEI,QAAA,SAAS,EAAC,MAFd;AAGI,QAAA,OAAO,EAAED,WAAW,CAACG,IAAZ,CAAiB,IAAjB,EAAuBF,YAAvB,CAHb;AAAA,kBAKKb,CAAC,CAAChB,WAAW,CAAC6B,YAAD,CAAZ;AALN,SACSA,YADT;AAAA;AAAA;AAAA;AAAA,cATP;AADL;AAAA;AAAA;AAAA;AAAA,YAHA,CAThB,EAkCKjB,YAAY,iBAAI;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAlCrB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAsCH,CA/ED;;GAAMH,a;UAGcJ,U,EACJD,c,EAEZI,Y,EAIoBF,a;;;KAVlBG,a;AAiFN,eAAeA,aAAf","sourcesContent":["import {MAP_META, STATE_NAMES} from '../constants';\n\nimport {useState, useCallback, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport {useTransition, animated} from 'react-spring';\nimport {useClickAway} from 'react-use';\n\nconst StateDropdown = ({stateCode, trail}) => {\n    const [showDropdown, setShowDropdown] = useState(false);\n    const dropdownRef = useRef();\n    const history = useHistory();\n    const {t} = useTranslation();\n\n    useClickAway(dropdownRef, () => {\n        setShowDropdown(false);\n    });\n\n    const transitions = useTransition(showDropdown, {\n        from: {\n            opacity: 0,\n            transform: 'translate3d(0, 2px, 0)',\n            zIndex: 999,\n        },\n        enter: {\n            opacity: 1,\n            transform: 'translate3d(0, 0px, 0)',\n            zIndex: 999,\n        },\n        leave: {\n            opacity: 0,\n            transform: 'translate3d(0, 2px, 0)',\n            zIndex: 999,\n        },\n        config: {\n            mass: 1,\n            tension: 210,\n            friction: 20,\n        },\n    });\n\n    const handleClick = useCallback(\n        (stateCodeItr) => {\n            setShowDropdown(false);\n            history.push(`/state/${stateCodeItr}`);\n        },\n        [history]\n    );\n\n    return (\n        <div className=\"StateDropdown\" ref={dropdownRef}>\n            <animated.h1\n                className=\"state-name fadeInUp\"\n                style={trail}\n                onClick={setShowDropdown.bind(this, !showDropdown)}\n            >\n                {t(STATE_NAMES[stateCode])}\n            </animated.h1>\n\n            {transitions(\n                (style, item) =>\n                    item && (\n                        <animated.div className=\"dropdown\" {...{style}}>\n                            {Object.keys(MAP_META)\n                                .filter(\n                                    (stateCodeItr) =>\n                                        stateCodeItr !== 'TT' && stateCodeItr !== stateCode\n                                )\n                                .sort((code1, code2) =>\n                                    STATE_NAMES[code1].localeCompare(STATE_NAMES[code2])\n                                )\n                                .map((stateCodeItr) => (\n                                    <h1\n                                        key={stateCodeItr}\n                                        className=\"item\"\n                                        onClick={handleClick.bind(this, stateCodeItr)}\n                                    >\n                                        {t(STATE_NAMES[stateCodeItr])}\n                                    </h1>\n                                ))}\n                        </animated.div>\n                    )\n            )}\n\n            {showDropdown && <div className=\"backdrop\"></div>}\n        </div>\n    );\n};\n\nexport default StateDropdown;\n"]},"metadata":{},"sourceType":"module"}