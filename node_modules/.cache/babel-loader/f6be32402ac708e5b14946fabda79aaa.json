{"ast":null,"code":"import Tooltip from\"./Tooltip\";import{formatDate,retry}from\"../utils/commonFunctions\";import{BellIcon,BellSlashIcon,HistoryIcon}from\"@primer/octicons-react\";import{useMemo,useCallback,lazy,Suspense}from\"react\";import{useTranslation}from\"react-i18next\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Timeline=/*#__PURE__*/lazy(function(){return retry(function(){return import(\"./Timeline\");});});var ActionsPanel=function ActionsPanel(_ref){var lastUpdatedDate=_ref.lastUpdatedDate,newUpdate=_ref.newUpdate,isTimelineMode=_ref.isTimelineMode,setIsTimelineMode=_ref.setIsTimelineMode,showUpdates=_ref.showUpdates,date=_ref.date,setDate=_ref.setDate,dates=_ref.dates,setNewUpdate=_ref.setNewUpdate,setShowUpdates=_ref.setShowUpdates;var _useTranslation=useTranslation(),t=_useTranslation.t;var trail=useMemo(function(){var styles=[];[0,0,0].map(function(element,index){styles.push({animationDelay:\"\".concat(500+index*250,\"ms\")});return null;});return styles;},[]);var handleTimelineClick=useCallback(function(){setIsTimelineMode(true);if(showUpdates)setShowUpdates(!showUpdates);},[setIsTimelineMode,setShowUpdates,showUpdates]);var handleBellClick=useCallback(function(){if(!showUpdates)setNewUpdate(false);setShowUpdates(!showUpdates);},[showUpdates,setShowUpdates,setNewUpdate]);return/*#__PURE__*/_jsxs(\"div\",{className:\"ActionsPanel\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"actions\",style:{opacity:isTimelineMode?0:1,transform:\"perspective(600px) rotateX(\".concat(isTimelineMode?90:0,\"deg)\"),pointerEvents:isTimelineMode?\"none\":\"\"},children:[/*#__PURE__*/_jsx(\"h5\",{className:\"fadeInUp\",style:trail[0],children:\"\".concat(formatDate(lastUpdatedDate,\"dd MMM, p\"),\" \").concat(t(\"IST\"))}),/*#__PURE__*/_jsxs(\"div\",{className:\"bell-icon fadeInUp\",style:trail[1],onClick:handleBellClick,children:[!showUpdates?/*#__PURE__*/_jsx(BellIcon,{size:15}):/*#__PURE__*/_jsx(BellSlashIcon,{size:15}),newUpdate&&/*#__PURE__*/_jsx(\"div\",{className:\"indicator\"})]}),/*#__PURE__*/_jsx(Tooltip,{message:\"Timeline\",hold:true,children:/*#__PURE__*/_jsx(\"div\",{className:\"timeline-icon fadeInUp\",onClick:handleTimelineClick,style:trail[2],children:/*#__PURE__*/_jsx(HistoryIcon,{})})})]}),isTimelineMode&&/*#__PURE__*/_jsx(Suspense,{fallback:/*#__PURE__*/_jsx(\"div\",{}),children:/*#__PURE__*/_jsx(Timeline,{date:date,setDate:setDate,dates:dates,isTimelineMode:isTimelineMode,setIsTimelineMode:setIsTimelineMode})})]});};export default ActionsPanel;","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/src/components/ActionsPanel.js"],"names":["Tooltip","formatDate","retry","BellIcon","BellSlashIcon","HistoryIcon","useMemo","useCallback","lazy","Suspense","useTranslation","Timeline","ActionsPanel","lastUpdatedDate","newUpdate","isTimelineMode","setIsTimelineMode","showUpdates","date","setDate","dates","setNewUpdate","setShowUpdates","t","trail","styles","map","element","index","push","animationDelay","handleTimelineClick","handleBellClick","opacity","transform","pointerEvents"],"mappings":"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","sourcesContent":["import Tooltip from \"./Tooltip\";\n\nimport { formatDate, retry } from \"../utils/commonFunctions\";\n\nimport { BellIcon, BellSlashIcon, HistoryIcon } from \"@primer/octicons-react\";\nimport { useMemo, useCallback, lazy, Suspense } from \"react\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Timeline = lazy(() => retry(() => import(\"./Timeline\")));\n\nconst ActionsPanel = ({\n  lastUpdatedDate,\n  newUpdate,\n  isTimelineMode,\n  setIsTimelineMode,\n  showUpdates,\n  date,\n  setDate,\n  dates,\n  setNewUpdate,\n  setShowUpdates,\n}) => {\n  const { t } = useTranslation();\n\n  const trail = useMemo(() => {\n    const styles = [];\n\n    [0, 0, 0].map((element, index) => {\n      styles.push({\n        animationDelay: `${500 + index * 250}ms`,\n      });\n      return null;\n    });\n    return styles;\n  }, []);\n\n  const handleTimelineClick = useCallback(() => {\n    setIsTimelineMode(true);\n    if (showUpdates) setShowUpdates(!showUpdates);\n  }, [setIsTimelineMode, setShowUpdates, showUpdates]);\n\n  const handleBellClick = useCallback(() => {\n    if (!showUpdates) setNewUpdate(false);\n    setShowUpdates(!showUpdates);\n  }, [showUpdates, setShowUpdates, setNewUpdate]);\n\n  return (\n    <div className=\"ActionsPanel\">\n      <div\n        className=\"actions\"\n        style={{\n          opacity: isTimelineMode ? 0 : 1,\n          transform: `perspective(600px) rotateX(${\n            isTimelineMode ? 90 : 0\n          }deg)`,\n          pointerEvents: isTimelineMode ? \"none\" : \"\",\n        }}\n      >\n        <h5 className=\"fadeInUp\" style={trail[0]}>{`${formatDate(\n          lastUpdatedDate,\n          \"dd MMM, p\"\n        )} ${t(\"IST\")}`}</h5>\n\n        <div\n          className=\"bell-icon fadeInUp\"\n          style={trail[1]}\n          onClick={handleBellClick}\n        >\n          {!showUpdates ? <BellIcon size={15} /> : <BellSlashIcon size={15} />}\n          {newUpdate && <div className=\"indicator\"></div>}\n        </div>\n\n        <Tooltip message={\"Timeline\"} hold>\n          <div\n            className=\"timeline-icon fadeInUp\"\n            onClick={handleTimelineClick}\n            style={trail[2]}\n          >\n            {<HistoryIcon />}\n          </div>\n        </Tooltip>\n      </div>\n\n      {isTimelineMode && (\n        <Suspense fallback={<div />}>\n          <Timeline\n            {...{ date, setDate, dates, isTimelineMode, setIsTimelineMode }}\n          />\n        </Suspense>\n      )}\n    </div>\n  );\n};\n\nexport default ActionsPanel;\n"]},"metadata":{},"sourceType":"module"}