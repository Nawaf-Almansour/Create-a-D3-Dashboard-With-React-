{"ast":null,"code":"var _jsxFileName = \"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/Navbar.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport { SLIDE_IN, SLIDE_OUT, SLIDE_IN_MOBILE, SLIDE_OUT_MOBILE } from \"../animations\"; // import locales from '../i18n/locales.json';\n\nimport { useState, useCallback, useRef } from \"react\";\nimport { Book, HelpCircle, Home, Moon, Sun } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useTransition, animated } from \"react-spring\";\nimport { useLockBodyScroll, usePageLeave, useWindowSize } from \"react-use\";\nimport useDarkMode from \"use-dark-mode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Navbar({\n  pages,\n  showLanguageSwitcher,\n  setShowLanguageSwitcher\n}) {\n  _s();\n\n  // const {i18n, t} = useTranslation();\n  // const currentLanguage = Object.keys(locales).includes(i18n?.language)\n  //     ? i18n?.language\n  //     : i18n?.options?.fallbackLng[0];\n  const [expand, setExpand] = useState(false);\n  const darkMode = useDarkMode(false);\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n  usePageLeave(() => setExpand(false));\n  const navbarTransition = useTransition(true, {\n    from: {\n      opacity: 0\n    },\n    enter: {\n      opacity: 1\n    }\n  });\n  const expandTransition = useTransition(expand, {\n    from: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    enter: windowSize.width < 769 ? SLIDE_OUT_MOBILE : SLIDE_OUT,\n    leave: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    config: {\n      mass: 1,\n      tension: 210,\n      friction: 26\n    }\n  });\n  const handleMouseEnter = useCallback(() => {\n    if (windowSize.width >= 769) {\n      setExpand(true);\n    }\n  }, [windowSize.width]);\n  const handleLanguageSwitcher = useCallback(() => {\n    if (expand) setExpand(false);\n    setShowLanguageSwitcher(!showLanguageSwitcher);\n  }, [expand, showLanguageSwitcher, setExpand, setShowLanguageSwitcher]);\n  return navbarTransition((style, item) => /*#__PURE__*/_jsxDEV(animated.div, {\n    className: \"Navbar\",\n    style,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-left\",\n      onClick: handleLanguageSwitcher,\n      children: locales[currentLanguage]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-middle\",\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/\",\n        onClick: setExpand.bind(this, false),\n        children: [\"Covid19\", /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"India\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"navbar-right\",\n      onMouseEnter: handleMouseEnter,\n      ...(windowSize.width < 769 && {\n        onClick: setExpand.bind(this, !expand)\n      }),\n      children: [windowSize.width < 769 && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: expand ? t(\"Close\") : t(\"Menu\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), windowSize.width >= 769 && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Home, { ...activeNavIcon(\"/\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/blog\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(Book, { ...activeNavIcon(\"/blog\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/about\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(HelpCircle, { ...activeNavIcon(\"/about\")\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: /*#__PURE__*/_jsxDEV(SunMoon, {\n            darkMode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), expandTransition((style, item) => item && /*#__PURE__*/_jsxDEV(animated.div, {\n      style,\n      children: /*#__PURE__*/_jsxDEV(Expand, {\n        pages,\n        setExpand,\n        darkMode,\n        windowSize\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 15\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this));\n}\n\n_s(Navbar, \"RqgbcWXyAA+aYLj9SlWwfLuh43c=\", false, function () {\n  return [useDarkMode, useLockBodyScroll, useWindowSize, usePageLeave, useTransition, useTransition];\n});\n\n_c = Navbar;\n\nfunction Expand({\n  pages,\n  setExpand,\n  darkMode,\n  windowSize\n}) {\n  _s2();\n\n  const expandElement = useRef(null);\n  const {\n    t\n  } = useTranslation();\n  const handleMouseLeave = useCallback(() => {\n    windowSize.width >= 769 && setExpand(false);\n  }, [setExpand, windowSize.width]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"expand\",\n    ref: expandElement,\n    onMouseLeave: handleMouseLeave,\n    children: [pages.map((page, i) => {\n      if (page.showInNavbar === true) {\n        return /*#__PURE__*/_jsxDEV(Link, {\n          to: page.pageLink,\n          ...(windowSize.width < 769 && {\n            onClick: setExpand.bind(this, false)\n          }),\n          children: /*#__PURE__*/_jsxDEV(\"span\", { ...navLinkProps(page.pageLink, page.animationDelayForNavbar),\n            children: t(page.displayName)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 13\n        }, this);\n      }\n\n      return null;\n    }), windowSize.width < 769 && /*#__PURE__*/_jsxDEV(SunMoon, {\n      darkMode\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 34\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"expand-bottom\",\n      children: /*#__PURE__*/_jsxDEV(\"h5\", {\n        children: t(\"A crowdsourced initiative.\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(Expand, \"CzhHouzBaE2nJ+R0vWbrijxU/vk=\", false, function () {\n  return [useTranslation];\n});\n\n_c2 = Expand;\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `${window.location.pathname === path ? \"focused\" : \"\"}`\n});\n\nconst activeNavIcon = path => ({\n  style: {\n    stroke: window.location.pathname === path ? \"#4c75f2\" : \"\"\n  }\n});\n\nconst SunMoon = ({\n  darkMode\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SunMoon\",\n    onClick: darkMode.toggle,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: darkMode.value ? /*#__PURE__*/_jsxDEV(Sun, {\n        color: \"#ffc107\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(Moon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 58\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n\n_c3 = SunMoon;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Expand\");\n$RefreshReg$(_c3, \"SunMoon\");","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/Navbar.js"],"names":["SLIDE_IN","SLIDE_OUT","SLIDE_IN_MOBILE","SLIDE_OUT_MOBILE","useState","useCallback","useRef","Book","HelpCircle","Home","Moon","Sun","useTranslation","Link","useTransition","animated","useLockBodyScroll","usePageLeave","useWindowSize","useDarkMode","Navbar","pages","showLanguageSwitcher","setShowLanguageSwitcher","expand","setExpand","darkMode","windowSize","navbarTransition","from","opacity","enter","expandTransition","width","leave","config","mass","tension","friction","handleMouseEnter","handleLanguageSwitcher","style","item","locales","currentLanguage","bind","onClick","t","activeNavIcon","Expand","expandElement","handleMouseLeave","map","page","i","showInNavbar","pageLink","navLinkProps","animationDelayForNavbar","displayName","path","animationDelay","className","window","location","pathname","stroke","SunMoon","toggle","value"],"mappings":"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","sourcesContent":["import {\n  SLIDE_IN,\n  SLIDE_OUT,\n  SLIDE_IN_MOBILE,\n  SLIDE_OUT_MOBILE,\n} from \"../animations\";\n// import locales from '../i18n/locales.json';\n\nimport { useState, useCallback, useRef } from \"react\";\nimport { Book, HelpCircle, Home, Moon, Sun } from \"react-feather\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link } from \"react-router-dom\";\nimport { useTransition, animated } from \"react-spring\";\nimport { useLockBodyScroll, usePageLeave, useWindowSize } from \"react-use\";\nimport useDarkMode from \"use-dark-mode\";\n\nfunction Navbar({ pages, showLanguageSwitcher, setShowLanguageSwitcher }) {\n  // const {i18n, t} = useTranslation();\n  // const currentLanguage = Object.keys(locales).includes(i18n?.language)\n  //     ? i18n?.language\n  //     : i18n?.options?.fallbackLng[0];\n\n  const [expand, setExpand] = useState(false);\n  const darkMode = useDarkMode(false);\n\n  useLockBodyScroll(expand);\n  const windowSize = useWindowSize();\n\n  usePageLeave(() => setExpand(false));\n\n  const navbarTransition = useTransition(true, {\n    from: { opacity: 0 },\n    enter: { opacity: 1 },\n  });\n\n  const expandTransition = useTransition(expand, {\n    from: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    enter: windowSize.width < 769 ? SLIDE_OUT_MOBILE : SLIDE_OUT,\n    leave: windowSize.width < 769 ? SLIDE_IN_MOBILE : SLIDE_IN,\n    config: { mass: 1, tension: 210, friction: 26 },\n  });\n\n  const handleMouseEnter = useCallback(() => {\n    if (windowSize.width >= 769) {\n      setExpand(true);\n    }\n  }, [windowSize.width]);\n\n  const handleLanguageSwitcher = useCallback(() => {\n    if (expand) setExpand(false);\n    setShowLanguageSwitcher(!showLanguageSwitcher);\n  }, [expand, showLanguageSwitcher, setExpand, setShowLanguageSwitcher]);\n\n  return navbarTransition((style, item) => (\n    <animated.div className=\"Navbar\" {...{ style }}>\n      <div className=\"navbar-left\" onClick={handleLanguageSwitcher}>\n        {locales[currentLanguage]}\n      </div>\n\n      <div className=\"navbar-middle\">\n        <Link to=\"/\" onClick={setExpand.bind(this, false)}>\n          Covid19<span>India</span>\n        </Link>\n      </div>\n\n      <div\n        className=\"navbar-right\"\n        onMouseEnter={handleMouseEnter}\n        {...(windowSize.width < 769 && {\n          onClick: setExpand.bind(this, !expand),\n        })}\n      >\n        {windowSize.width < 769 && (\n          <span>{expand ? t(\"Close\") : t(\"Menu\")}</span>\n        )}\n\n        {windowSize.width >= 769 && (\n          <>\n            <Link to=\"/\">\n              <span>\n                <Home {...activeNavIcon(\"/\")} />\n              </span>\n            </Link>\n            <Link to=\"/blog\">\n              <span>\n                <Book {...activeNavIcon(\"/blog\")} />\n              </span>\n            </Link>\n            <Link to=\"/about\">\n              <span>\n                <HelpCircle {...activeNavIcon(\"/about\")} />\n              </span>\n            </Link>\n            <span>\n              <SunMoon {...{ darkMode }} />\n            </span>\n          </>\n        )}\n      </div>\n\n      {expandTransition(\n        (style, item) =>\n          item && (\n            <animated.div {...{ style }}>\n              <Expand {...{ pages, setExpand, darkMode, windowSize }} />\n            </animated.div>\n          )\n      )}\n    </animated.div>\n  ));\n}\n\nfunction Expand({ pages, setExpand, darkMode, windowSize }) {\n  const expandElement = useRef(null);\n  const { t } = useTranslation();\n\n  const handleMouseLeave = useCallback(() => {\n    windowSize.width >= 769 && setExpand(false);\n  }, [setExpand, windowSize.width]);\n\n  return (\n    <div className=\"expand\" ref={expandElement} onMouseLeave={handleMouseLeave}>\n      {pages.map((page, i) => {\n        if (page.showInNavbar === true) {\n          return (\n            <Link\n              to={page.pageLink}\n              key={i}\n              {...(windowSize.width < 769 && {\n                onClick: setExpand.bind(this, false),\n              })}\n            >\n              <span\n                {...navLinkProps(page.pageLink, page.animationDelayForNavbar)}\n              >\n                {t(page.displayName)}\n              </span>\n            </Link>\n          );\n        }\n        return null;\n      })}\n\n      {windowSize.width < 769 && <SunMoon {...{ darkMode }} />}\n\n      <div className=\"expand-bottom\">\n        <h5>{t(\"A crowdsourced initiative.\")}</h5>\n      </div>\n    </div>\n  );\n}\n\nexport default Navbar;\n\nconst navLinkProps = (path, animationDelay) => ({\n  className: `${window.location.pathname === path ? \"focused\" : \"\"}`,\n});\n\nconst activeNavIcon = (path) => ({\n  style: {\n    stroke: window.location.pathname === path ? \"#4c75f2\" : \"\",\n  },\n});\n\nconst SunMoon = ({ darkMode }) => {\n  return (\n    <div className=\"SunMoon\" onClick={darkMode.toggle}>\n      <div>{darkMode.value ? <Sun color={\"#ffc107\"} /> : <Moon />}</div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}