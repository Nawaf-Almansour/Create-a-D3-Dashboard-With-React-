{"ast":null,"code":"var _jsxFileName = \"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/MapVisualizer.js\",\n    _s = $RefreshSig$();\n\nimport MapLegend from './MapLegend';\nimport { D3_TRANSITION_DURATION, MAP_DIMENSIONS, MAP_META, MAP_TYPES, MAP_VIZS, STATE_CODES, STATE_NAMES, STATISTIC_CONFIGS, UNKNOWN_DISTRICT_KEY } from '../constants';\nimport { formatNumber, spike, toTitleCase } from '../utils/commonFunctions';\nimport { AlertIcon } from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport { max } from 'd3-array';\nimport { json } from 'd3-fetch';\nimport { geoIdentity, geoPath } from 'd3-geo';\nimport { scaleLinear, scaleSqrt, scaleSequential } from 'd3-scale';\nimport { interpolateReds, interpolateBlues, interpolateGreens, interpolateGreys, interpolatePurples, interpolateOranges, interpolatePiYG } from 'd3-scale-chromatic';\nimport { select } from 'd3-selection';\nimport { transition } from 'd3-transition';\nimport { useCallback, useEffect, useMemo, useRef } from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useHistory } from 'react-router-dom';\nimport useSWR from 'swr';\nimport { feature, mesh } from 'topojson-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst colorInterpolator = statistic => {\n  var _STATISTIC_CONFIGS$st;\n\n  if (statistic === 'confirmed') {\n    return t => interpolateReds(t * 0.85);\n  } else if (statistic === 'active') {\n    return t => interpolateBlues(t * 0.85);\n  } else if (statistic === 'recovered') {\n    return t => interpolateGreens(t * 0.85);\n  } else if (statistic === 'deceased') {\n    return t => interpolateGreys(t * 0.85);\n  } else if (statistic === 'tested') {\n    return t => interpolatePurples(t * 0.85);\n  } else if (statistic === 'tpr' || statistic === 'cfr' || statistic === 'other') {\n    return t => interpolateOranges(t * 0.85);\n  } else if (((_STATISTIC_CONFIGS$st = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st === void 0 ? void 0 : _STATISTIC_CONFIGS$st.category) === 'vaccinated') {\n    return t => interpolatePiYG(0.15 + 0.35 * (1 - t));\n  } else {\n    return t => interpolateOranges(t * 0.85);\n  }\n};\n\nfunction MapVisualizer({\n  mapCode,\n  isDistrictView,\n  mapViz,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  getMapStatistic,\n  transformStatistic,\n  noDistrictData\n}) {\n  _s();\n\n  var _statisticConfig$mapC;\n\n  const {\n    t\n  } = useTranslation();\n  const svgRef = useRef(null);\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n  const {\n    data: geoData\n  } = useSWR(mapMeta.geoDataFile, async file => {\n    const x = await json(file);\n    console.log(x);\n    return x;\n  }, {\n    suspense: false,\n    revalidateOnFocus: false\n  });\n  const statisticTotal = useMemo(() => {\n    return getMapStatistic(data[mapCode]);\n  }, [data, mapCode, getMapStatistic]);\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n  const strokeColor = useCallback(alpha => ((statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.color) || '#343a40') + alpha, [statisticConfig]);\n  const features = useMemo(() => {\n    if (!geoData) return null;\n    const featuresWrap = !isDistrictView ? feature(geoData, geoData.objects.states).features : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz !== MAP_VIZS.CHOROPLETH ? [...feature(geoData, geoData.objects.states).features, ...feature(geoData, geoData.objects.districts).features] : feature(geoData, geoData.objects.districts).features; // Add id to each feature\n\n    return featuresWrap.map(feature => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, isDistrictView, mapViz, mapMeta]);\n  const districtsSet = useMemo(() => {\n    if (!geoData || !isDistrictView) return {};\n    return feature(geoData, geoData.objects.districts).features.reduce((stateCodes, feature) => {\n      const stateCode = STATE_CODES[feature.properties.st_nm];\n\n      if (!stateCodes[stateCode]) {\n        stateCodes[stateCode] = new Set();\n      }\n\n      stateCodes[stateCode].add(feature.properties.district);\n      return stateCodes;\n    }, {});\n  }, [geoData, isDistrictView]);\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(stateCode => stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode));\n\n    if (!isDistrictView) {\n      return max(stateCodes, stateCode => transformStatistic(getMapStatistic(data[stateCode])));\n    } else {\n      const districtData = stateCodes.reduce((res, stateCode) => {\n        var _data$stateCode;\n\n        const districts = Object.keys(((_data$stateCode = data[stateCode]) === null || _data$stateCode === void 0 ? void 0 : _data$stateCode.districts) || []).filter(districtName => ((districtsSet === null || districtsSet === void 0 ? void 0 : districtsSet[stateCode]) || new Set()).has(districtName) || mapViz !== MAP_VIZS.CHOROPLETH && districtName === UNKNOWN_DISTRICT_KEY);\n        res.push(...districts.map(districtName => transformStatistic(getMapStatistic(data[stateCode].districts[districtName]))));\n        return res;\n      }, []);\n      return max(districtData);\n    }\n  }, [data, isDistrictView, getMapStatistic, mapViz, districtsSet, transformStatistic]);\n  const mapScale = useMemo(() => {\n    var _STATISTIC_CONFIGS$st2, _STATISTIC_CONFIGS$st3;\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      // No negative values\n      return scaleSqrt([0, Math.max(1, statisticMax || 0)], [0, 40]).clamp(true).nice(3);\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      return scaleLinear([0, Math.max(1, statisticMax || 0)], [0, 80]).clamp(true).nice(3);\n    } else if ((_STATISTIC_CONFIGS$st2 = STATISTIC_CONFIGS[statistic]) === null || _STATISTIC_CONFIGS$st2 === void 0 ? void 0 : (_STATISTIC_CONFIGS$st3 = _STATISTIC_CONFIGS$st2.mapConfig) === null || _STATISTIC_CONFIGS$st3 === void 0 ? void 0 : _STATISTIC_CONFIGS$st3.colorScale) {\n      return STATISTIC_CONFIGS[statistic].mapConfig.colorScale;\n    } else {\n      // No negative values\n      return scaleSequential([0, Math.max(1, statisticMax || 0)], colorInterpolator(statistic)).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n  const fillColor = useCallback(d => {\n    if (mapViz === MAP_VIZS.CHOROPLETH) {\n      var _stateData$districts;\n\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      const district = d.properties.district;\n      const stateData = data[stateCode];\n      const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts = stateData.districts) === null || _stateData$districts === void 0 ? void 0 : _stateData$districts[district];\n      const n = transformStatistic(getMapStatistic(district ? districtData : stateData));\n      const color = n ? mapScale(n) : '#ffffff00';\n      return color;\n    }\n  }, [mapViz, data, mapScale, getMapStatistic, transformStatistic]);\n  const populateTexts = useCallback(regionSelection => {\n    regionSelection.select('title').text(d => {\n      if (mapViz !== MAP_VIZS.CHOROPLETH && !(statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.nonLinear)) {\n        var _stateData$districts2;\n\n        const state = d.properties.st_nm;\n        const stateCode = STATE_CODES[state];\n        const district = d.properties.district;\n        const stateData = data[stateCode];\n        const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts2 = stateData.districts) === null || _stateData$districts2 === void 0 ? void 0 : _stateData$districts2[district];\n        let n;\n        if (district) n = getMapStatistic(districtData);else n = getMapStatistic(stateData);\n        return `${formatNumber(100 * (n / (statisticTotal || 0.001)), '%')} from ${toTitleCase(district ? district : state)}`;\n      }\n    });\n  }, [mapViz, data, getMapStatistic, statisticTotal, statisticConfig]);\n  const onceTouchedRegion = useRef(null); // Reset on tapping outside map\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]); // Choropleth\n\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    svg.select('.regions').selectAll('path').data(mapViz === MAP_VIZS.CHOROPLETH ? features : [], d => d.id).join(enter => enter.append('path').attr('d', path).attr('stroke-width', 1.8).attr('stroke-opacity', 0).style('cursor', 'pointer').on('mouseenter', (event, d) => {\n      if (onceTouchedRegion.current) return;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[d.properties.st_nm],\n        districtName: d.properties.district\n      });\n    }).on('pointerdown', (event, d) => {\n      if (onceTouchedRegion.current === d) onceTouchedRegion.current = null;else onceTouchedRegion.current = d;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[d.properties.st_nm],\n        districtName: d.properties.district\n      });\n    }).attr('fill', '#fff0').attr('stroke', '#fff0'), update => update, exit => exit.transition(T).attr('stroke', '#fff0').attr('fill', '#fff0').remove()).attr('pointer-events', 'all').on('click', (event, d) => {\n      var _data$stateCode2;\n\n      event.stopPropagation();\n      const stateCode = STATE_CODES[d.properties.st_nm];\n      if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE || !((_data$stateCode2 = data[stateCode]) === null || _data$stateCode2 === void 0 ? void 0 : _data$stateCode2.districts)) return; // Disable pointer events till the new map is rendered\n\n      svg.attr('pointer-events', 'none');\n      svg.select('.regions').selectAll('path').attr('pointer-events', 'none'); // Switch map\n\n      history.push(`/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`);\n    }).call(sel => {\n      sel.transition(T).attr('fill', fillColor).attr('stroke', strokeColor.bind(this, ''));\n    });\n  }, [mapViz, data, features, fillColor, geoData, history, mapMeta.mapType, path, setRegionHighlighted, strokeColor]);\n  const sortedFeatures = useMemo(() => {\n    if (mapViz === MAP_VIZS.CHOROPLETH) {\n      return [];\n    } else {\n      return (features || []).map(feature => {\n        const stateCode = STATE_CODES[feature.properties.st_nm];\n        const districtName = feature.properties.district;\n        const stateData = data[stateCode];\n\n        if (!isDistrictView) {\n          feature.value = getMapStatistic(stateData);\n        } else {\n          var _stateData$districts3, _stateData$districts4;\n\n          const districtData = stateData === null || stateData === void 0 ? void 0 : (_stateData$districts3 = stateData.districts) === null || _stateData$districts3 === void 0 ? void 0 : _stateData$districts3[districtName];\n          if (districtName) feature.value = getMapStatistic(districtData);else feature.value = getMapStatistic(stateData === null || stateData === void 0 ? void 0 : (_stateData$districts4 = stateData.districts) === null || _stateData$districts4 === void 0 ? void 0 : _stateData$districts4[UNKNOWN_DISTRICT_KEY]);\n        }\n\n        return feature;\n      }).filter(feature => feature.value > 0).sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n  }, [mapViz, isDistrictView, getMapStatistic, features, data]); // Bubble\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    const regionSelection = svg.select('.circles').selectAll('circle').data(mapViz === MAP_VIZS.BUBBLE ? sortedFeatures : [], feature => feature.id).join(enter => enter.append('circle').attr('transform', feature => `translate(${path.centroid(feature)})`).attr('fill-opacity', 0.25).style('cursor', 'pointer').attr('pointer-events', 'all').call(enter => {\n      enter.append('title');\n    }), update => update, exit => exit.call(exit => exit.transition(T).attr('r', 0).remove())).on('mouseenter', (event, feature) => {\n      if (onceTouchedRegion.current) return;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[feature.properties.st_nm],\n        districtName: !isDistrictView ? null : feature.properties.district || UNKNOWN_DISTRICT_KEY\n      });\n    }).on('pointerdown', (event, feature) => {\n      if (onceTouchedRegion.current === feature) onceTouchedRegion.current = null;else onceTouchedRegion.current = feature;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[feature.properties.st_nm],\n        districtName: !isDistrictView ? null : feature.properties.district || UNKNOWN_DISTRICT_KEY\n      });\n    }).on('click', (event, feature) => {\n      event.stopPropagation();\n      if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE) return;\n      history.push(`/state/${STATE_CODES[feature.properties.st_nm]}${window.innerWidth < 769 ? '#MapExplorer' : ''}`);\n    }).call(sel => {\n      sel.transition(T).attr('fill', statisticConfig.color + '70').attr('stroke', statisticConfig.color + '70').attr('r', feature => mapScale(feature.value));\n    });\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [mapMeta.mapType, mapViz, isDistrictView, sortedFeatures, history, mapScale, path, setRegionHighlighted, populateTexts, statisticConfig, getMapStatistic]); // Spike (Note: bad unmodular code)\n\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    const regionSelection = svg.select('.spikes').selectAll('path').data(mapViz === MAP_VIZS.SPIKE ? sortedFeatures : [], feature => feature.id, feature => feature.id).join(enter => enter.append('path').attr('transform', feature => `translate(${path.centroid(feature)})`).attr('opacity', 0).attr('fill-opacity', 0.25).style('cursor', 'pointer').attr('pointer-events', 'all').attr('d', spike(0)).call(enter => {\n      enter.append('title');\n    }), update => update, exit => exit.call(exit => exit.transition(T).attr('opacity', 0).attr('d', spike(0)).remove())).on('mouseenter', (event, feature) => {\n      if (onceTouchedRegion.current) return;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[feature.properties.st_nm],\n        districtName: !isDistrictView ? null : feature.properties.district || UNKNOWN_DISTRICT_KEY\n      });\n    }).on('pointerdown', (event, feature) => {\n      if (onceTouchedRegion.current === feature) onceTouchedRegion.current = null;else onceTouchedRegion.current = feature;\n      setRegionHighlighted({\n        stateCode: STATE_CODES[feature.properties.st_nm],\n        districtName: !isDistrictView ? null : feature.properties.district || UNKNOWN_DISTRICT_KEY\n      });\n    }).on('click', (event, feature) => {\n      event.stopPropagation();\n      if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE) return;\n      history.push(`/state/${STATE_CODES[feature.properties.st_nm]}${window.innerWidth < 769 ? '#MapExplorer' : ''}`);\n    }).call(sel => {\n      sel.transition(T).attr('opacity', 1).attr('fill', statisticConfig.color + '70').attr('stroke', statisticConfig.color + '70').attr('d', feature => spike(mapScale(feature.value)));\n    });\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [mapMeta.mapType, mapViz, isDistrictView, sortedFeatures, history, mapScale, path, setRegionHighlighted, populateTexts, statisticConfig, getMapStatistic]); // Boundaries\n\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (mapMeta.mapType === MAP_TYPES.STATE || isDistrictView && mapViz === MAP_VIZS.CHOROPLETH) {\n      // Add id to mesh\n      meshDistricts = [mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg.select('.state-borders').attr('fill', 'none').attr('stroke-width', 1.5).selectAll('path').data(meshStates, d => d.id).join(enter => enter.append('path').attr('d', path).attr('stroke', '#fff0'), update => update, exit => exit.transition(T).attr('stroke', '#fff0').remove()).transition(T).attr('stroke', strokeColor.bind(this, '40'));\n    svg.select('.district-borders').attr('fill', 'none').attr('stroke-width', 1.5).selectAll('path').data(meshDistricts, d => d.id).join(enter => enter.append('path').attr('d', path).attr('d', path).attr('stroke', '#fff0'), update => update, exit => exit.transition(T).attr('stroke', '#fff0').remove()).transition(T).attr('stroke', strokeColor.bind(this, '40'));\n  }, [geoData, mapMeta, mapCode, mapViz, isDistrictView, statistic, path, strokeColor]); // Highlight\n\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      svg.select('.circles').selectAll('circle').attr('fill-opacity', d => {\n        var _d$properties;\n\n        const highlighted = stateName === d.properties.st_nm && (!district && stateCode !== mapCode || district === ((_d$properties = d.properties) === null || _d$properties === void 0 ? void 0 : _d$properties.district) || !isDistrictView || district === UNKNOWN_DISTRICT_KEY && !d.properties.district);\n        return highlighted ? 1 : 0.25;\n      });\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      svg.select('.spikes').selectAll('path').attr('fill-opacity', d => {\n        var _d$properties2;\n\n        const highlighted = stateName === d.properties.st_nm && (!district && stateCode !== mapCode || district === ((_d$properties2 = d.properties) === null || _d$properties2 === void 0 ? void 0 : _d$properties2.district) || !isDistrictView || district === UNKNOWN_DISTRICT_KEY && !d.properties.district);\n        return highlighted ? 1 : 0.25;\n      });\n    } else {\n      svg.select('.regions').selectAll('path').each(function (d) {\n        var _d$properties3;\n\n        const highlighted = stateName === d.properties.st_nm && (!district && stateCode !== mapCode || district === ((_d$properties3 = d.properties) === null || _d$properties3 === void 0 ? void 0 : _d$properties3.district) || !isDistrictView);\n        if (highlighted) this.parentNode.appendChild(this);\n        select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n      });\n    }\n  }, [geoData, data, mapCode, isDistrictView, mapViz, regionHighlighted.stateCode, regionHighlighted.districtName, statistic]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"svg-parent\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        id: \"chart\",\n        className: classnames({\n          zone: !!(statisticConfig === null || statisticConfig === void 0 ? void 0 : (_statisticConfig$mapC = statisticConfig.mapConfig) === null || _statisticConfig$mapC === void 0 ? void 0 : _statisticConfig$mapC.colorScale)\n        }),\n        viewBox: `0 0 ${MAP_DIMENSIONS[0]} ${MAP_DIMENSIONS[1]}`,\n        preserveAspectRatio: \"xMidYMid meet\",\n        ref: svgRef,\n        children: [/*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"regions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"state-borders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"district-borders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 681,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"circles\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 682,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n          className: \"spikes\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 683,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 9\n      }, this), noDistrictData && (statisticConfig === null || statisticConfig === void 0 ? void 0 : statisticConfig.hasPrimary) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames('disclaimer', `is-${statistic}`),\n        children: [/*#__PURE__*/_jsxDEV(AlertIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 687,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: t('District-wise data not available in state bulletin')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 688,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 686,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 669,\n      columnNumber: 7\n    }, this), mapScale && /*#__PURE__*/_jsxDEV(MapLegend, {\n      data,\n      statistic,\n      mapViz,\n      mapScale\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 695,\n      columnNumber: 20\n    }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n      style: {\n        position: 'absolute',\n        height: 0\n      },\n      children: /*#__PURE__*/_jsxDEV(\"defs\", {\n        children: /*#__PURE__*/_jsxDEV(\"filter\", {\n          id: \"balance-color\",\n          colorInterpolationFilters: \"sRGB\",\n          children: /*#__PURE__*/_jsxDEV(\"feColorMatrix\", {\n            type: \"matrix\",\n            values: \"0.91372549  0           0            0  0.08627451 0           0.91372549  0            0  0.08627451 0           0           0.854901961  0  0.145098039 0           0           0            1  0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 700,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 699,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 698,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 697,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MapVisualizer, \"q3rIfW6TlZzIcfqaidIgL32uNTY=\", false, function () {\n  return [useTranslation, useHistory, useSWR];\n});\n\n_c = MapVisualizer;\nexport default MapVisualizer;\n\nvar _c;\n\n$RefreshReg$(_c, \"MapVisualizer\");","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/d3ia/src/components/MapVisualizer.js"],"names":["MapLegend","D3_TRANSITION_DURATION","MAP_DIMENSIONS","MAP_META","MAP_TYPES","MAP_VIZS","STATE_CODES","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","formatNumber","spike","toTitleCase","AlertIcon","classnames","max","json","geoIdentity","geoPath","scaleLinear","scaleSqrt","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","interpolatePiYG","select","transition","useCallback","useEffect","useMemo","useRef","useTranslation","useHistory","useSWR","feature","mesh","colorInterpolator","statistic","t","category","MapVisualizer","mapCode","isDistrictView","mapViz","data","regionHighlighted","setRegionHighlighted","getMapStatistic","transformStatistic","noDistrictData","svgRef","mapMeta","history","geoData","geoDataFile","file","x","console","log","suspense","revalidateOnFocus","statisticTotal","statisticConfig","strokeColor","alpha","color","features","featuresWrap","objects","states","mapType","COUNTRY","CHOROPLETH","districts","map","district","properties","state","st_nm","obj","Object","assign","id","districtsSet","reduce","stateCodes","stateCode","Set","add","statisticMax","keys","filter","includes","districtData","res","districtName","has","push","mapScale","BUBBLE","Math","clamp","nice","SPIKE","mapConfig","colorScale","fillColor","d","stateData","n","populateTexts","regionSelection","text","nonLinear","onceTouchedRegion","svg","current","attr","on","path","T","duration","selectAll","join","enter","append","style","event","update","exit","remove","stopPropagation","STATE","window","innerWidth","call","sel","bind","sortedFeatures","value","sort","featureA","featureB","centroid","requestIdleCallback","meshStates","meshDistricts","stateName","highlighted","each","parentNode","appendChild","zone","hasPrimary","position","height"],"mappings":"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","sourcesContent":["import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_DIMENSIONS,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, spike, toTitleCase} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleLinear, scaleSqrt, scaleSequential} from 'd3-scale';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n  interpolatePiYG,\n} from 'd3-scale-chromatic';\nimport {select} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport {feature, mesh} from 'topojson-client';\n\nconst colorInterpolator = (statistic) => {\n  if (statistic === 'confirmed') {\n    return (t) => interpolateReds(t * 0.85);\n  } else if (statistic === 'active') {\n    return (t) => interpolateBlues(t * 0.85);\n  } else if (statistic === 'recovered') {\n    return (t) => interpolateGreens(t * 0.85);\n  } else if (statistic === 'deceased') {\n    return (t) => interpolateGreys(t * 0.85);\n  } else if (statistic === 'tested') {\n    return (t) => interpolatePurples(t * 0.85);\n  } else if (\n    statistic === 'tpr' ||\n    statistic === 'cfr' ||\n    statistic === 'other'\n  ) {\n    return (t) => interpolateOranges(t * 0.85);\n  } else if (STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') {\n    return (t) => interpolatePiYG(0.15 + 0.35 * (1 - t));\n  } else {\n    return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nfunction MapVisualizer({\n  mapCode,\n  isDistrictView,\n  mapViz,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  getMapStatistic,\n  transformStatistic,\n  noDistrictData,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      const x = await json(file);\n      console.log(x)\n      return x;\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticTotal = useMemo(() => {\n    return getMapStatistic(data[mapCode]);\n  }, [data, mapCode, getMapStatistic]);\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  const strokeColor = useCallback(\n    (alpha) => (statisticConfig?.color || '#343a40') + alpha,\n    [statisticConfig]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n\n    const featuresWrap = !isDistrictView\n      ? feature(geoData, geoData.objects.states).features\n      : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz !== MAP_VIZS.CHOROPLETH\n      ? [\n          ...feature(geoData, geoData.objects.states).features,\n          ...feature(geoData, geoData.objects.districts).features,\n        ]\n      : feature(geoData, geoData.objects.districts).features;\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, isDistrictView, mapViz, mapMeta]);\n\n  const districtsSet = useMemo(() => {\n    if (!geoData || !isDistrictView) return {};\n    return feature(geoData, geoData.objects.districts).features.reduce(\n      (stateCodes, feature) => {\n        const stateCode = STATE_CODES[feature.properties.st_nm];\n        if (!stateCodes[stateCode]) {\n          stateCodes[stateCode] = new Set();\n        }\n        stateCodes[stateCode].add(feature.properties.district);\n        return stateCodes;\n      },\n      {}\n    );\n  }, [geoData, isDistrictView]);\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    if (!isDistrictView) {\n      return max(stateCodes, (stateCode) =>\n        transformStatistic(getMapStatistic(data[stateCode]))\n      );\n    } else {\n      const districtData = stateCodes.reduce((res, stateCode) => {\n        const districts = Object.keys(data[stateCode]?.districts || []).filter(\n          (districtName) =>\n            (districtsSet?.[stateCode] || new Set()).has(districtName) ||\n            (mapViz !== MAP_VIZS.CHOROPLETH &&\n              districtName === UNKNOWN_DISTRICT_KEY)\n        );\n        res.push(\n          ...districts.map((districtName) =>\n            transformStatistic(\n              getMapStatistic(data[stateCode].districts[districtName])\n            )\n          )\n        );\n        return res;\n      }, []);\n      return max(districtData);\n    }\n  }, [\n    data,\n    isDistrictView,\n    getMapStatistic,\n    mapViz,\n    districtsSet,\n    transformStatistic,\n  ]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      // No negative values\n      return scaleSqrt([0, Math.max(1, statisticMax || 0)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      return scaleLinear([0, Math.max(1, statisticMax || 0)], [0, 80])\n        .clamp(true)\n        .nice(3);\n    } else if (STATISTIC_CONFIGS[statistic]?.mapConfig?.colorScale) {\n      return STATISTIC_CONFIGS[statistic].mapConfig.colorScale;\n    } else {\n      // No negative values\n      return scaleSequential(\n        [0, Math.max(1, statisticMax || 0)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const fillColor = useCallback(\n    (d) => {\n      if (mapViz === MAP_VIZS.CHOROPLETH) {\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        const district = d.properties.district;\n        const stateData = data[stateCode];\n        const districtData = stateData?.districts?.[district];\n        const n = transformStatistic(\n          getMapStatistic(district ? districtData : stateData)\n        );\n        const color = n ? mapScale(n) : '#ffffff00';\n        return color;\n      }\n    },\n    [mapViz, data, mapScale, getMapStatistic, transformStatistic]\n  );\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz !== MAP_VIZS.CHOROPLETH && !statisticConfig?.nonLinear) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getMapStatistic(districtData);\n          else n = getMapStatistic(stateData);\n          return `${formatNumber(\n            100 * (n / (statisticTotal || 0.001)),\n            '%'\n          )} from ${toTitleCase(district ? district : state)}`;\n        }\n      });\n    },\n    [mapViz, data, getMapStatistic, statisticTotal, statisticConfig]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz === MAP_VIZS.CHOROPLETH ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (event, d) => {\n              if (onceTouchedRegion.current) return;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('pointerdown', (event, d) => {\n              if (onceTouchedRegion.current === d)\n                onceTouchedRegion.current = null;\n              else onceTouchedRegion.current = d;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  const sortedFeatures = useMemo(() => {\n    if (mapViz === MAP_VIZS.CHOROPLETH) {\n      return [];\n    } else {\n      return (features || [])\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (!isDistrictView) {\n            feature.value = getMapStatistic(stateData);\n          } else {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName) feature.value = getMapStatistic(districtData);\n            else\n              feature.value = getMapStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY]\n              );\n          }\n\n          return feature;\n        })\n        .filter((feature) => feature.value > 0)\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n  }, [mapViz, isDistrictView, getMapStatistic, features, data]);\n\n  // Bubble\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(\n        mapViz === MAP_VIZS.BUBBLE ? sortedFeatures : [],\n        (feature) => feature.id\n      )\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', statisticConfig.color + '70')\n          .attr('stroke', statisticConfig.color + '70')\n          .attr('r', (feature) => mapScale(feature.value));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    sortedFeatures,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statisticConfig,\n    getMapStatistic,\n  ]);\n\n  // Spike (Note: bad unmodular code)\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.spikes')\n      .selectAll('path')\n      .data(\n        mapViz === MAP_VIZS.SPIKE ? sortedFeatures : [],\n        (feature) => feature.id,\n        (feature) => feature.id\n      )\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('opacity', 0)\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .attr('d', spike(0))\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit.call((exit) =>\n            exit.transition(T).attr('opacity', 0).attr('d', spike(0)).remove()\n          )\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('opacity', 1)\n          .attr('fill', statisticConfig.color + '70')\n          .attr('stroke', statisticConfig.color + '70')\n          .attr('d', (feature) => spike(mapScale(feature.value)));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    sortedFeatures,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statisticConfig,\n    getMapStatistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (isDistrictView && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    isDistrictView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      svg\n        .select('.spikes')\n        .selectAll('path')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    isDistrictView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          className={classnames({\n            zone: !!statisticConfig?.mapConfig?.colorScale,\n          })}\n          viewBox={`0 0 ${MAP_DIMENSIONS[0]} ${MAP_DIMENSIONS[1]}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n          <g className=\"spikes\" />\n        </svg>\n        {noDistrictData && statisticConfig?.hasPrimary && (\n          <div className={classnames('disclaimer', `is-${statistic}`)}>\n            <AlertIcon />\n            <span>\n              {t('District-wise data not available in state bulletin')}\n            </span>\n          </div>\n        )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, statistic, mapViz, mapScale}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n}\n\nexport default MapVisualizer;\n"]},"metadata":{},"sourceType":"module"}