{"ast":null,"code":"import _toConsumableArray from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{MAP_TYPES,TABLE_STATISTICS_EXPANDED,STATISTIC_CONFIGS}from\"../constants\";import{capitalize}from\"../utils/commonFunctions\";import{TriangleRightIcon}from\"@primer/octicons-react\";import classnames from\"classnames\";import equal from\"fast-deep-equal\";import{memo,useEffect,useCallback,useMemo,useRef}from\"react\";import{useTranslation}from\"react-i18next\";import{useMeasure}from\"react-use\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StatisticDropdown=function StatisticDropdown(_ref){var currentStatistic=_ref.currentStatistic,isPerLakh=_ref.isPerLakh,delta7Mode=_ref.delta7Mode,mapStatistic=_ref.mapStatistic,setMapStatistic=_ref.setMapStatistic,mapType=_ref.mapType,hideDistrictTestData=_ref.hideDistrictTestData,hideVaccinated=_ref.hideVaccinated,zoneColor=_ref.zoneColor;var _useTranslation=useTranslation(),t=_useTranslation.t;var _useMeasure=useMeasure(),_useMeasure2=_slicedToArray(_useMeasure,2),wrapperRef=_useMeasure2[0],width=_useMeasure2[1].width;var selectRef=useRef();var currentStatisticConfig=STATISTIC_CONFIGS[currentStatistic];var statistics=useMemo(function(){var filteredStatistics=TABLE_STATISTICS_EXPANDED.filter(function(statistic){var _STATISTIC_CONFIGS$st,_STATISTIC_CONFIGS$st2;return(mapType===MAP_TYPES.COUNTRY||((_STATISTIC_CONFIGS$st=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st===void 0?void 0:_STATISTIC_CONFIGS$st.category)!==\"tested\"||!hideDistrictTestData)&&(((_STATISTIC_CONFIGS$st2=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st2===void 0?void 0:_STATISTIC_CONFIGS$st2.category)!==\"vaccinated\"||!hideVaccinated);});return filteredStatistics.includes(currentStatistic)?filteredStatistics:[currentStatistic].concat(_toConsumableArray(filteredStatistics));},[currentStatistic,mapType,hideDistrictTestData,hideVaccinated]);var handleChange=useCallback(function(event){setMapStatistic(event.target.value);},[setMapStatistic]);useEffect(function(){var _STATISTIC_CONFIGS$ma;var tempSelect=document.createElement(\"select\");var tempOption=document.createElement(\"option\");tempOption.textContent=(_STATISTIC_CONFIGS$ma=STATISTIC_CONFIGS[mapStatistic])===null||_STATISTIC_CONFIGS$ma===void 0?void 0:_STATISTIC_CONFIGS$ma.displayName;tempSelect.style.cssText+=\"\\n      visibility: hidden;\\n      position: fixed;\\n      \";tempSelect.appendChild(tempOption);selectRef.current.after(tempSelect);var tempSelectWidth=tempSelect.getBoundingClientRect().width;if(tempSelectWidth>0){selectRef.current.style.width=\"\".concat(tempSelectWidth+2,\"px\");}tempSelect.remove();},[width,mapStatistic]);return/*#__PURE__*/_jsxs(\"div\",{className:\"StatisticDropdown\",ref:wrapperRef,children:[/*#__PURE__*/_jsx(\"div\",{className:classnames(\"triangle-icon\"),children:/*#__PURE__*/_jsx(TriangleRightIcon,{size:20})}),/*#__PURE__*/_jsx(\"select\",{ref:selectRef,value:currentStatistic,className:classnames(currentStatistic,zoneColor),style:zoneColor&&{color:zoneColor,backgroundColor:zoneColor+\"20\",outlineColor:zoneColor+\"40\"}||{},onChange:handleChange,children:statistics.map(function(statistic){var statisticConfig=STATISTIC_CONFIGS[statistic];return/*#__PURE__*/_jsx(\"option\",{value:statistic,children:t(capitalize(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.displayName))},statistic);})}),/*#__PURE__*/_jsx(\"span\",{children:\"\".concat(isPerLakh&&!(currentStatisticConfig===null||currentStatisticConfig===void 0?void 0:currentStatisticConfig.nonLinear)&&mapStatistic!==\"population\"?\" \".concat(t(\"per lakh\")):\"\").concat(delta7Mode&&(currentStatisticConfig===null||currentStatisticConfig===void 0?void 0:currentStatisticConfig.showDelta)||(currentStatisticConfig===null||currentStatisticConfig===void 0?void 0:currentStatisticConfig.onlyDelta7)?\" \".concat(t(\"in last 7 days\")):\"\")})]});};var isEqual=function isEqual(prevProps,currProps){if(!equal(prevProps.currentStatistic,currProps.currentStatistic)){return false;}else if(!equal(prevProps.isPerLakh,currProps.isPerLakh)){return false;}else if(!equal(prevProps.delta7Mode,currProps.delta7Mode)){return false;}else if(!equal(prevProps.mapStatistic,currProps.mapStatistic)){return false;}else if(!equal(prevProps.mapType,currProps.mapType)){return false;}else if(!equal(prevProps.hideDistrictTestData,currProps.hideDistrictTestData)){return false;}else if(!equal(prevProps.hideVaccinated,currProps.hideVaccinated)){return false;}else if(!equal(prevProps.zoneColor,currProps.zoneColor)){return false;}return true;};export default/*#__PURE__*/memo(StatisticDropdown,isEqual);","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/src/components/StatisticDropdown.js"],"names":["MAP_TYPES","TABLE_STATISTICS_EXPANDED","STATISTIC_CONFIGS","capitalize","TriangleRightIcon","classnames","equal","memo","useEffect","useCallback","useMemo","useRef","useTranslation","useMeasure","StatisticDropdown","currentStatistic","isPerLakh","delta7Mode","mapStatistic","setMapStatistic","mapType","hideDistrictTestData","hideVaccinated","zoneColor","t","wrapperRef","width","selectRef","currentStatisticConfig","statistics","filteredStatistics","filter","statistic","COUNTRY","category","includes","handleChange","event","target","value","tempSelect","document","createElement","tempOption","textContent","displayName","style","cssText","appendChild","current","after","tempSelectWidth","getBoundingClientRect","remove","color","backgroundColor","outlineColor","map","statisticConfig","nonLinear","showDelta","onlyDelta7","isEqual","prevProps","currProps"],"mappings":"4VAAA,OACEA,SADF,CAEEC,yBAFF,CAGEC,iBAHF,KAIO,cAJP,CAKA,OAASC,UAAT,KAA2B,0BAA3B,CAEA,OAASC,iBAAT,KAAkC,wBAAlC,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,iBAAlB,CACA,OAASC,IAAT,CAAeC,SAAf,CAA0BC,WAA1B,CAAuCC,OAAvC,CAAgDC,MAAhD,KAA8D,OAA9D,CACA,OAASC,cAAT,KAA+B,eAA/B,CACA,OAASC,UAAT,KAA2B,WAA3B,C,wFAEA,GAAMC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,MAUpB,IATJC,CAAAA,gBASI,MATJA,gBASI,CARJC,SAQI,MARJA,SAQI,CAPJC,UAOI,MAPJA,UAOI,CANJC,YAMI,MANJA,YAMI,CALJC,eAKI,MALJA,eAKI,CAJJC,OAII,MAJJA,OAII,CAHJC,oBAGI,MAHJA,oBAGI,CAFJC,cAEI,MAFJA,cAEI,CADJC,SACI,MADJA,SACI,CACJ,oBAAcX,cAAc,EAA5B,CAAQY,CAAR,iBAAQA,CAAR,CACA,gBAAgCX,UAAU,EAA1C,4CAAOY,UAAP,iBAAqBC,KAArB,iBAAqBA,KAArB,CACA,GAAMC,CAAAA,SAAS,CAAGhB,MAAM,EAAxB,CAEA,GAAMiB,CAAAA,sBAAsB,CAAG1B,iBAAiB,CAACa,gBAAD,CAAhD,CAEA,GAAMc,CAAAA,UAAU,CAAGnB,OAAO,CAAC,UAAM,CAC/B,GAAMoB,CAAAA,kBAAkB,CAAG7B,yBAAyB,CAAC8B,MAA1B,CACzB,SAACC,SAAD,yDACE,CAACZ,OAAO,GAAKpB,SAAS,CAACiC,OAAtB,EACC,wBAAA/B,iBAAiB,CAAC8B,SAAD,CAAjB,sEAA8BE,QAA9B,IAA2C,QAD5C,EAEC,CAACb,oBAFH,IAGC,yBAAAnB,iBAAiB,CAAC8B,SAAD,CAAjB,wEAA8BE,QAA9B,IAA2C,YAA3C,EACC,CAACZ,cAJH,CADF,EADyB,CAA3B,CAQA,MAAOQ,CAAAA,kBAAkB,CAACK,QAAnB,CAA4BpB,gBAA5B,EACHe,kBADG,EAEFf,gBAFE,4BAEmBe,kBAFnB,EAAP,CAGD,CAZyB,CAYvB,CAACf,gBAAD,CAAmBK,OAAnB,CAA4BC,oBAA5B,CAAkDC,cAAlD,CAZuB,CAA1B,CAcA,GAAMc,CAAAA,YAAY,CAAG3B,WAAW,CAC9B,SAAC4B,KAAD,CAAW,CACTlB,eAAe,CAACkB,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAf,CACD,CAH6B,CAI9B,CAACpB,eAAD,CAJ8B,CAAhC,CAOAX,SAAS,CAAC,UAAM,2BACd,GAAMgC,CAAAA,UAAU,CAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB,CACA,GAAMC,CAAAA,UAAU,CAAGF,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAnB,CAEAC,UAAU,CAACC,WAAX,wBAAyB1C,iBAAiB,CAACgB,YAAD,CAA1C,gDAAyB,sBAAiC2B,WAA1D,CACAL,UAAU,CAACM,KAAX,CAAiBC,OAAjB,gEAKAP,UAAU,CAACQ,WAAX,CAAuBL,UAAvB,EACAhB,SAAS,CAACsB,OAAV,CAAkBC,KAAlB,CAAwBV,UAAxB,EAEA,GAAMW,CAAAA,eAAe,CAAGX,UAAU,CAACY,qBAAX,GAAmC1B,KAA3D,CACA,GAAIyB,eAAe,CAAG,CAAtB,CAAyB,CACvBxB,SAAS,CAACsB,OAAV,CAAkBH,KAAlB,CAAwBpB,KAAxB,WAAmCyB,eAAe,CAAG,CAArD,OACD,CACDX,UAAU,CAACa,MAAX,GACD,CAlBQ,CAkBN,CAAC3B,KAAD,CAAQR,YAAR,CAlBM,CAAT,CAoBA,mBACE,aAAK,SAAS,CAAC,mBAAf,CAAmC,GAAG,CAAEO,UAAxC,wBACE,YAAK,SAAS,CAAEpB,UAAU,CAAC,eAAD,CAA1B,uBACE,KAAC,iBAAD,EAAmB,IAAI,CAAE,EAAzB,EADF,EADF,cAIE,eACE,GAAG,CAAEsB,SADP,CAEE,KAAK,CAAEZ,gBAFT,CAGE,SAAS,CAAEV,UAAU,CAACU,gBAAD,CAAmBQ,SAAnB,CAHvB,CAIE,KAAK,CACFA,SAAS,EAAI,CACZ+B,KAAK,CAAE/B,SADK,CAEZgC,eAAe,CAAEhC,SAAS,CAAG,IAFjB,CAGZiC,YAAY,CAAEjC,SAAS,CAAG,IAHd,CAAd,EAKA,EAVJ,CAYE,QAAQ,CAAEa,YAZZ,UAcGP,UAAU,CAAC4B,GAAX,CAAe,SAACzB,SAAD,CAAe,CAC7B,GAAM0B,CAAAA,eAAe,CAAGxD,iBAAiB,CAAC8B,SAAD,CAAzC,CACA,mBACE,eAAwB,KAAK,CAAEA,SAA/B,UACGR,CAAC,CAACrB,UAAU,CAACuD,eAAD,SAACA,eAAD,iBAACA,eAAe,CAAEb,WAAlB,CAAX,CADJ,EAAab,SAAb,CADF,CAKD,CAPA,CAdH,EAJF,cA2BE,gCACEhB,SAAS,EACT,EAACY,sBAAD,SAACA,sBAAD,iBAACA,sBAAsB,CAAE+B,SAAzB,CADA,EAEAzC,YAAY,GAAK,YAFjB,YAGQM,CAAC,CAAC,UAAD,CAHT,EAII,EALN,SAOGP,UAAU,GAAIW,sBAAJ,SAAIA,sBAAJ,iBAAIA,sBAAsB,CAAEgC,SAA5B,CAAX,GACAhC,sBADA,SACAA,sBADA,iBACAA,sBAAsB,CAAEiC,UADxB,aAEQrC,CAAC,CAAC,gBAAD,CAFT,EAGI,EAVN,GA3BF,GADF,CA0CD,CApGD,CAsGA,GAAMsC,CAAAA,OAAO,CAAG,QAAVA,CAAAA,OAAU,CAACC,SAAD,CAAYC,SAAZ,CAA0B,CACxC,GAAI,CAAC1D,KAAK,CAACyD,SAAS,CAAChD,gBAAX,CAA6BiD,SAAS,CAACjD,gBAAvC,CAAV,CAAoE,CAClE,MAAO,MAAP,CACD,CAFD,IAEO,IAAI,CAACT,KAAK,CAACyD,SAAS,CAAC/C,SAAX,CAAsBgD,SAAS,CAAChD,SAAhC,CAAV,CAAsD,CAC3D,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAACV,KAAK,CAACyD,SAAS,CAAC9C,UAAX,CAAuB+C,SAAS,CAAC/C,UAAjC,CAAV,CAAwD,CAC7D,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAACX,KAAK,CAACyD,SAAS,CAAC7C,YAAX,CAAyB8C,SAAS,CAAC9C,YAAnC,CAAV,CAA4D,CACjE,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAACZ,KAAK,CAACyD,SAAS,CAAC3C,OAAX,CAAoB4C,SAAS,CAAC5C,OAA9B,CAAV,CAAkD,CACvD,MAAO,MAAP,CACD,CAFM,IAEA,IACL,CAACd,KAAK,CAACyD,SAAS,CAAC1C,oBAAX,CAAiC2C,SAAS,CAAC3C,oBAA3C,CADD,CAEL,CACA,MAAO,MAAP,CACD,CAJM,IAIA,IAAI,CAACf,KAAK,CAACyD,SAAS,CAACzC,cAAX,CAA2B0C,SAAS,CAAC1C,cAArC,CAAV,CAAgE,CACrE,MAAO,MAAP,CACD,CAFM,IAEA,IAAI,CAAChB,KAAK,CAACyD,SAAS,CAACxC,SAAX,CAAsByC,SAAS,CAACzC,SAAhC,CAAV,CAAsD,CAC3D,MAAO,MAAP,CACD,CACD,MAAO,KAAP,CACD,CArBD,CAuBA,2BAAehB,IAAI,CAACO,iBAAD,CAAoBgD,OAApB,CAAnB","sourcesContent":["import {\n  MAP_TYPES,\n  TABLE_STATISTICS_EXPANDED,\n  STATISTIC_CONFIGS,\n} from \"../constants\";\nimport { capitalize } from \"../utils/commonFunctions\";\n\nimport { TriangleRightIcon } from \"@primer/octicons-react\";\nimport classnames from \"classnames\";\nimport equal from \"fast-deep-equal\";\nimport { memo, useEffect, useCallback, useMemo, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useMeasure } from \"react-use\";\n\nconst StatisticDropdown = ({\n  currentStatistic,\n  isPerLakh,\n  delta7Mode,\n  mapStatistic,\n  setMapStatistic,\n  mapType,\n  hideDistrictTestData,\n  hideVaccinated,\n  zoneColor,\n}) => {\n  const { t } = useTranslation();\n  const [wrapperRef, { width }] = useMeasure();\n  const selectRef = useRef();\n\n  const currentStatisticConfig = STATISTIC_CONFIGS[currentStatistic];\n\n  const statistics = useMemo(() => {\n    const filteredStatistics = TABLE_STATISTICS_EXPANDED.filter(\n      (statistic) =>\n        (mapType === MAP_TYPES.COUNTRY ||\n          STATISTIC_CONFIGS[statistic]?.category !== \"tested\" ||\n          !hideDistrictTestData) &&\n        (STATISTIC_CONFIGS[statistic]?.category !== \"vaccinated\" ||\n          !hideVaccinated)\n    );\n    return filteredStatistics.includes(currentStatistic)\n      ? filteredStatistics\n      : [currentStatistic, ...filteredStatistics];\n  }, [currentStatistic, mapType, hideDistrictTestData, hideVaccinated]);\n\n  const handleChange = useCallback(\n    (event) => {\n      setMapStatistic(event.target.value);\n    },\n    [setMapStatistic]\n  );\n\n  useEffect(() => {\n    const tempSelect = document.createElement(\"select\");\n    const tempOption = document.createElement(\"option\");\n\n    tempOption.textContent = STATISTIC_CONFIGS[mapStatistic]?.displayName;\n    tempSelect.style.cssText += `\n      visibility: hidden;\n      position: fixed;\n      `;\n\n    tempSelect.appendChild(tempOption);\n    selectRef.current.after(tempSelect);\n\n    const tempSelectWidth = tempSelect.getBoundingClientRect().width;\n    if (tempSelectWidth > 0) {\n      selectRef.current.style.width = `${tempSelectWidth + 2}px`;\n    }\n    tempSelect.remove();\n  }, [width, mapStatistic]);\n\n  return (\n    <div className=\"StatisticDropdown\" ref={wrapperRef}>\n      <div className={classnames(\"triangle-icon\")}>\n        <TriangleRightIcon size={20} />\n      </div>\n      <select\n        ref={selectRef}\n        value={currentStatistic}\n        className={classnames(currentStatistic, zoneColor)}\n        style={\n          (zoneColor && {\n            color: zoneColor,\n            backgroundColor: zoneColor + \"20\",\n            outlineColor: zoneColor + \"40\",\n          }) ||\n          {}\n        }\n        onChange={handleChange}\n      >\n        {statistics.map((statistic) => {\n          const statisticConfig = STATISTIC_CONFIGS[statistic];\n          return (\n            <option key={statistic} value={statistic}>\n              {t(capitalize(statisticConfig?.displayName))}\n            </option>\n          );\n        })}\n      </select>\n      <span>{`${\n        isPerLakh &&\n        !currentStatisticConfig?.nonLinear &&\n        mapStatistic !== \"population\"\n          ? ` ${t(\"per lakh\")}`\n          : \"\"\n      }${\n        (delta7Mode && currentStatisticConfig?.showDelta) ||\n        currentStatisticConfig?.onlyDelta7\n          ? ` ${t(\"in last 7 days\")}`\n          : \"\"\n      }`}</span>\n    </div>\n  );\n};\n\nconst isEqual = (prevProps, currProps) => {\n  if (!equal(prevProps.currentStatistic, currProps.currentStatistic)) {\n    return false;\n  } else if (!equal(prevProps.isPerLakh, currProps.isPerLakh)) {\n    return false;\n  } else if (!equal(prevProps.delta7Mode, currProps.delta7Mode)) {\n    return false;\n  } else if (!equal(prevProps.mapStatistic, currProps.mapStatistic)) {\n    return false;\n  } else if (!equal(prevProps.mapType, currProps.mapType)) {\n    return false;\n  } else if (\n    !equal(prevProps.hideDistrictTestData, currProps.hideDistrictTestData)\n  ) {\n    return false;\n  } else if (!equal(prevProps.hideVaccinated, currProps.hideVaccinated)) {\n    return false;\n  } else if (!equal(prevProps.zoneColor, currProps.zoneColor)) {\n    return false;\n  }\n  return true;\n};\n\nexport default memo(StatisticDropdown, isEqual);\n"]},"metadata":{},"sourceType":"module"}