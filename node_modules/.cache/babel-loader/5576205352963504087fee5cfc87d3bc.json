{"ast":null,"code":"import _toConsumableArray from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import MapLegend from'./MapLegend';import{D3_TRANSITION_DURATION,MAP_DIMENSIONS,MAP_META,MAP_TYPES,MAP_VIZS,STATE_CODES,STATE_NAMES,STATISTIC_CONFIGS,UNKNOWN_DISTRICT_KEY}from'../constants';import{formatNumber,spike,toTitleCase}from'../utils/commonFunctions';import{AlertIcon}from'@primer/octicons-react';import classnames from'classnames';import{max}from'd3-array';import{json}from'd3-fetch';import{geoIdentity,geoPath}from'd3-geo';import{scaleLinear,scaleSqrt,scaleSequential}from'd3-scale';import{interpolateReds,interpolateBlues,interpolateGreens,interpolateGreys,interpolatePurples,interpolateOranges,interpolatePiYG}from'd3-scale-chromatic';import{select}from'd3-selection';import{transition}from'd3-transition';import{useCallback,useEffect,useMemo,useRef}from'react';import{useTranslation}from'react-i18next';import{useHistory}from'react-router-dom';import useSWR from'swr';import{feature,mesh}from'topojson-client';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";var colorInterpolator=function colorInterpolator(statistic){var _STATISTIC_CONFIGS$st;if(statistic==='confirmed'){return function(t){return interpolateReds(t*0.85);};}else if(statistic==='active'){return function(t){return interpolateBlues(t*0.85);};}else if(statistic==='recovered'){return function(t){return interpolateGreens(t*0.85);};}else if(statistic==='deceased'){return function(t){return interpolateGreys(t*0.85);};}else if(statistic==='tested'){return function(t){return interpolatePurples(t*0.85);};}else if(statistic==='tpr'||statistic==='cfr'||statistic==='other'){return function(t){return interpolateOranges(t*0.85);};}else if(((_STATISTIC_CONFIGS$st=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st===void 0?void 0:_STATISTIC_CONFIGS$st.category)==='vaccinated'){return function(t){return interpolatePiYG(0.15+0.35*(1-t));};}else{return function(t){return interpolateOranges(t*0.85);};}};function MapVisualizer(_ref){var _this=this,_statisticConfig$mapC;var mapCode=_ref.mapCode,isDistrictView=_ref.isDistrictView,mapViz=_ref.mapViz,data=_ref.data,regionHighlighted=_ref.regionHighlighted,setRegionHighlighted=_ref.setRegionHighlighted,statistic=_ref.statistic,getMapStatistic=_ref.getMapStatistic,transformStatistic=_ref.transformStatistic,noDistrictData=_ref.noDistrictData;var _useTranslation=useTranslation(),t=_useTranslation.t;var svgRef=useRef(null);var mapMeta=MAP_META[mapCode];var history=useHistory();var _useSWR=useSWR(mapMeta.geoDataFile,/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(file){var x;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return json(file);case 2:x=_context.sent;console.log(x);return _context.abrupt(\"return\",x);case 5:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref2.apply(this,arguments);};}(),{suspense:false,revalidateOnFocus:false}),geoData=_useSWR.data;var statisticTotal=useMemo(function(){return getMapStatistic(data[mapCode]);},[data,mapCode,getMapStatistic]);var statisticConfig=STATISTIC_CONFIGS[statistic];var strokeColor=useCallback(function(alpha){return((statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.color)||'#343a40')+alpha;},[statisticConfig]);var features=useMemo(function(){if(!geoData)return null;var featuresWrap=!isDistrictView?feature(geoData,geoData.objects.states).features:mapMeta.mapType===MAP_TYPES.COUNTRY&&mapViz!==MAP_VIZS.CHOROPLETH?[].concat(_toConsumableArray(feature(geoData,geoData.objects.states).features),_toConsumableArray(feature(geoData,geoData.objects.districts).features)):feature(geoData,geoData.objects.districts).features;// Add id to each feature\nreturn featuresWrap.map(function(feature){var district=feature.properties.district;var state=feature.properties.st_nm;var obj=Object.assign({},feature);obj.id=\"\".concat(mapCode,\"-\").concat(state).concat(district?'-'+district:'');return obj;});},[geoData,mapCode,isDistrictView,mapViz,mapMeta]);var districtsSet=useMemo(function(){if(!geoData||!isDistrictView)return{};return feature(geoData,geoData.objects.districts).features.reduce(function(stateCodes,feature){var stateCode=STATE_CODES[feature.properties.st_nm];if(!stateCodes[stateCode]){stateCodes[stateCode]=new Set();}stateCodes[stateCode].add(feature.properties.district);return stateCodes;},{});},[geoData,isDistrictView]);var statisticMax=useMemo(function(){var stateCodes=Object.keys(data).filter(function(stateCode){return stateCode!=='TT'&&Object.keys(MAP_META).includes(stateCode);});if(!isDistrictView){return max(stateCodes,function(stateCode){return transformStatistic(getMapStatistic(data[stateCode]));});}else{var districtData=stateCodes.reduce(function(res,stateCode){var _data$stateCode;var districts=Object.keys(((_data$stateCode=data[stateCode])===null||_data$stateCode===void 0?void 0:_data$stateCode.districts)||[]).filter(function(districtName){return((districtsSet===null||districtsSet===void 0?void 0:districtsSet[stateCode])||new Set()).has(districtName)||mapViz!==MAP_VIZS.CHOROPLETH&&districtName===UNKNOWN_DISTRICT_KEY;});res.push.apply(res,_toConsumableArray(districts.map(function(districtName){return transformStatistic(getMapStatistic(data[stateCode].districts[districtName]));})));return res;},[]);return max(districtData);}},[data,isDistrictView,getMapStatistic,mapViz,districtsSet,transformStatistic]);var mapScale=useMemo(function(){var _STATISTIC_CONFIGS$st2,_STATISTIC_CONFIGS$st3;if(mapViz===MAP_VIZS.BUBBLE){// No negative values\nreturn scaleSqrt([0,Math.max(1,statisticMax||0)],[0,40]).clamp(true).nice(3);}else if(mapViz===MAP_VIZS.SPIKE){return scaleLinear([0,Math.max(1,statisticMax||0)],[0,80]).clamp(true).nice(3);}else if((_STATISTIC_CONFIGS$st2=STATISTIC_CONFIGS[statistic])===null||_STATISTIC_CONFIGS$st2===void 0?void 0:(_STATISTIC_CONFIGS$st3=_STATISTIC_CONFIGS$st2.mapConfig)===null||_STATISTIC_CONFIGS$st3===void 0?void 0:_STATISTIC_CONFIGS$st3.colorScale){return STATISTIC_CONFIGS[statistic].mapConfig.colorScale;}else{// No negative values\nreturn scaleSequential([0,Math.max(1,statisticMax||0)],colorInterpolator(statistic)).clamp(true);}},[mapViz,statistic,statisticMax]);var fillColor=useCallback(function(d){if(mapViz===MAP_VIZS.CHOROPLETH){var _stateData$districts;var stateCode=STATE_CODES[d.properties.st_nm];var district=d.properties.district;var stateData=data[stateCode];var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts=stateData.districts)===null||_stateData$districts===void 0?void 0:_stateData$districts[district];var n=transformStatistic(getMapStatistic(district?districtData:stateData));var color=n?mapScale(n):'#ffffff00';return color;}},[mapViz,data,mapScale,getMapStatistic,transformStatistic]);var populateTexts=useCallback(function(regionSelection){regionSelection.select('title').text(function(d){if(mapViz!==MAP_VIZS.CHOROPLETH&&!(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.nonLinear)){var _stateData$districts2;var state=d.properties.st_nm;var stateCode=STATE_CODES[state];var district=d.properties.district;var stateData=data[stateCode];var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts2=stateData.districts)===null||_stateData$districts2===void 0?void 0:_stateData$districts2[district];var n;if(district)n=getMapStatistic(districtData);else n=getMapStatistic(stateData);return\"\".concat(formatNumber(100*(n/(statisticTotal||0.001)),'%'),\" from \").concat(toTitleCase(district?district:state));}});},[mapViz,data,getMapStatistic,statisticTotal,statisticConfig]);var onceTouchedRegion=useRef(null);// Reset on tapping outside map\nuseEffect(function(){var svg=select(svgRef.current);svg.attr('pointer-events','auto').on('click',function(){onceTouchedRegion.current=null;setRegionHighlighted({stateCode:mapCode,districtName:null});});},[mapCode,setRegionHighlighted]);var path=useMemo(function(){if(!geoData)return null;return geoPath(geoIdentity());},[geoData]);// Choropleth\nuseEffect(function(){if(!geoData)return;var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);svg.select('.regions').selectAll('path').data(mapViz===MAP_VIZS.CHOROPLETH?features:[],function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('stroke-width',1.8).attr('stroke-opacity',0).style('cursor','pointer').on('mouseenter',function(event,d){if(onceTouchedRegion.current)return;setRegionHighlighted({stateCode:STATE_CODES[d.properties.st_nm],districtName:d.properties.district});}).on('pointerdown',function(event,d){if(onceTouchedRegion.current===d)onceTouchedRegion.current=null;else onceTouchedRegion.current=d;setRegionHighlighted({stateCode:STATE_CODES[d.properties.st_nm],districtName:d.properties.district});}).attr('fill','#fff0').attr('stroke','#fff0');},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').attr('fill','#fff0').remove();}).attr('pointer-events','all').on('click',function(event,d){var _data$stateCode2;event.stopPropagation();var stateCode=STATE_CODES[d.properties.st_nm];if(onceTouchedRegion.current||mapMeta.mapType===MAP_TYPES.STATE||!((_data$stateCode2=data[stateCode])===null||_data$stateCode2===void 0?void 0:_data$stateCode2.districts))return;// Disable pointer events till the new map is rendered\nsvg.attr('pointer-events','none');svg.select('.regions').selectAll('path').attr('pointer-events','none');// Switch map\nhistory.push(\"/state/\".concat(stateCode).concat(window.innerWidth<769?'#MapExplorer':''));}).call(function(sel){sel.transition(T).attr('fill',fillColor).attr('stroke',strokeColor.bind(_this,''));});},[mapViz,data,features,fillColor,geoData,history,mapMeta.mapType,path,setRegionHighlighted,strokeColor]);var sortedFeatures=useMemo(function(){if(mapViz===MAP_VIZS.CHOROPLETH){return[];}else{return(features||[]).map(function(feature){var stateCode=STATE_CODES[feature.properties.st_nm];var districtName=feature.properties.district;var stateData=data[stateCode];if(!isDistrictView){feature.value=getMapStatistic(stateData);}else{var _stateData$districts3,_stateData$districts4;var districtData=stateData===null||stateData===void 0?void 0:(_stateData$districts3=stateData.districts)===null||_stateData$districts3===void 0?void 0:_stateData$districts3[districtName];if(districtName)feature.value=getMapStatistic(districtData);else feature.value=getMapStatistic(stateData===null||stateData===void 0?void 0:(_stateData$districts4=stateData.districts)===null||_stateData$districts4===void 0?void 0:_stateData$districts4[UNKNOWN_DISTRICT_KEY]);}return feature;}).filter(function(feature){return feature.value>0;}).sort(function(featureA,featureB){return featureB.value-featureB.value;});}},[mapViz,isDistrictView,getMapStatistic,features,data]);// Bubble\nuseEffect(function(){var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var regionSelection=svg.select('.circles').selectAll('circle').data(mapViz===MAP_VIZS.BUBBLE?sortedFeatures:[],function(feature){return feature.id;}).join(function(enter){return enter.append('circle').attr('transform',function(feature){return\"translate(\".concat(path.centroid(feature),\")\");}).attr('fill-opacity',0.25).style('cursor','pointer').attr('pointer-events','all').call(function(enter){enter.append('title');});},function(update){return update;},function(exit){return exit.call(function(exit){return exit.transition(T).attr('r',0).remove();});}).on('mouseenter',function(event,feature){if(onceTouchedRegion.current)return;setRegionHighlighted({stateCode:STATE_CODES[feature.properties.st_nm],districtName:!isDistrictView?null:feature.properties.district||UNKNOWN_DISTRICT_KEY});}).on('pointerdown',function(event,feature){if(onceTouchedRegion.current===feature)onceTouchedRegion.current=null;else onceTouchedRegion.current=feature;setRegionHighlighted({stateCode:STATE_CODES[feature.properties.st_nm],districtName:!isDistrictView?null:feature.properties.district||UNKNOWN_DISTRICT_KEY});}).on('click',function(event,feature){event.stopPropagation();if(onceTouchedRegion.current||mapMeta.mapType===MAP_TYPES.STATE)return;history.push(\"/state/\".concat(STATE_CODES[feature.properties.st_nm]).concat(window.innerWidth<769?'#MapExplorer':''));}).call(function(sel){sel.transition(T).attr('fill',statisticConfig.color+'70').attr('stroke',statisticConfig.color+'70').attr('r',function(feature){return mapScale(feature.value);});});window.requestIdleCallback(function(){populateTexts(regionSelection);});},[mapMeta.mapType,mapViz,isDistrictView,sortedFeatures,history,mapScale,path,setRegionHighlighted,populateTexts,statisticConfig,getMapStatistic]);// Spike (Note: bad unmodular code)\nuseEffect(function(){var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var regionSelection=svg.select('.spikes').selectAll('path').data(mapViz===MAP_VIZS.SPIKE?sortedFeatures:[],function(feature){return feature.id;},function(feature){return feature.id;}).join(function(enter){return enter.append('path').attr('transform',function(feature){return\"translate(\".concat(path.centroid(feature),\")\");}).attr('opacity',0).attr('fill-opacity',0.25).style('cursor','pointer').attr('pointer-events','all').attr('d',spike(0)).call(function(enter){enter.append('title');});},function(update){return update;},function(exit){return exit.call(function(exit){return exit.transition(T).attr('opacity',0).attr('d',spike(0)).remove();});}).on('mouseenter',function(event,feature){if(onceTouchedRegion.current)return;setRegionHighlighted({stateCode:STATE_CODES[feature.properties.st_nm],districtName:!isDistrictView?null:feature.properties.district||UNKNOWN_DISTRICT_KEY});}).on('pointerdown',function(event,feature){if(onceTouchedRegion.current===feature)onceTouchedRegion.current=null;else onceTouchedRegion.current=feature;setRegionHighlighted({stateCode:STATE_CODES[feature.properties.st_nm],districtName:!isDistrictView?null:feature.properties.district||UNKNOWN_DISTRICT_KEY});}).on('click',function(event,feature){event.stopPropagation();if(onceTouchedRegion.current||mapMeta.mapType===MAP_TYPES.STATE)return;history.push(\"/state/\".concat(STATE_CODES[feature.properties.st_nm]).concat(window.innerWidth<769?'#MapExplorer':''));}).call(function(sel){sel.transition(T).attr('opacity',1).attr('fill',statisticConfig.color+'70').attr('stroke',statisticConfig.color+'70').attr('d',function(feature){return spike(mapScale(feature.value));});});window.requestIdleCallback(function(){populateTexts(regionSelection);});},[mapMeta.mapType,mapViz,isDistrictView,sortedFeatures,history,mapScale,path,setRegionHighlighted,populateTexts,statisticConfig,getMapStatistic]);// Boundaries\nuseEffect(function(){if(!geoData)return;var svg=select(svgRef.current);var T=transition().duration(D3_TRANSITION_DURATION);var meshStates=[];var meshDistricts=[];if(mapMeta.mapType===MAP_TYPES.COUNTRY){meshStates=[mesh(geoData,geoData.objects.states)];meshStates[0].id=\"\".concat(mapCode,\"-states\");}if(mapMeta.mapType===MAP_TYPES.STATE||isDistrictView&&mapViz===MAP_VIZS.CHOROPLETH){// Add id to mesh\nmeshDistricts=[mesh(geoData,geoData.objects.districts)];meshDistricts[0].id=\"\".concat(mapCode,\"-districts\");}svg.select('.state-borders').attr('fill','none').attr('stroke-width',1.5).selectAll('path').data(meshStates,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('stroke','#fff0');},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').remove();}).transition(T).attr('stroke',strokeColor.bind(_this,'40'));svg.select('.district-borders').attr('fill','none').attr('stroke-width',1.5).selectAll('path').data(meshDistricts,function(d){return d.id;}).join(function(enter){return enter.append('path').attr('d',path).attr('d',path).attr('stroke','#fff0');},function(update){return update;},function(exit){return exit.transition(T).attr('stroke','#fff0').remove();}).transition(T).attr('stroke',strokeColor.bind(_this,'40'));},[geoData,mapMeta,mapCode,mapViz,isDistrictView,statistic,path,strokeColor]);// Highlight\nuseEffect(function(){var stateCode=regionHighlighted.stateCode;var stateName=STATE_NAMES[stateCode];var district=regionHighlighted.districtName;var svg=select(svgRef.current);if(mapViz===MAP_VIZS.BUBBLE){svg.select('.circles').selectAll('circle').attr('fill-opacity',function(d){var _d$properties;var highlighted=stateName===d.properties.st_nm&&(!district&&stateCode!==mapCode||district===((_d$properties=d.properties)===null||_d$properties===void 0?void 0:_d$properties.district)||!isDistrictView||district===UNKNOWN_DISTRICT_KEY&&!d.properties.district);return highlighted?1:0.25;});}else if(mapViz===MAP_VIZS.SPIKE){svg.select('.spikes').selectAll('path').attr('fill-opacity',function(d){var _d$properties2;var highlighted=stateName===d.properties.st_nm&&(!district&&stateCode!==mapCode||district===((_d$properties2=d.properties)===null||_d$properties2===void 0?void 0:_d$properties2.district)||!isDistrictView||district===UNKNOWN_DISTRICT_KEY&&!d.properties.district);return highlighted?1:0.25;});}else{svg.select('.regions').selectAll('path').each(function(d){var _d$properties3;var highlighted=stateName===d.properties.st_nm&&(!district&&stateCode!==mapCode||district===((_d$properties3=d.properties)===null||_d$properties3===void 0?void 0:_d$properties3.district)||!isDistrictView);if(highlighted)this.parentNode.appendChild(this);select(this).attr('stroke-opacity',highlighted?1:0);});}},[geoData,data,mapCode,isDistrictView,mapViz,regionHighlighted.stateCode,regionHighlighted.districtName,statistic]);return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsxs(\"div\",{className:\"svg-parent\",children:[/*#__PURE__*/_jsxs(\"svg\",{id:\"chart\",className:classnames({zone:!!(statisticConfig===null||statisticConfig===void 0?void 0:(_statisticConfig$mapC=statisticConfig.mapConfig)===null||_statisticConfig$mapC===void 0?void 0:_statisticConfig$mapC.colorScale)}),viewBox:\"0 0 \".concat(MAP_DIMENSIONS[0],\" \").concat(MAP_DIMENSIONS[1]),preserveAspectRatio:\"xMidYMid meet\",ref:svgRef,children:[/*#__PURE__*/_jsx(\"g\",{className:\"regions\"}),/*#__PURE__*/_jsx(\"g\",{className:\"state-borders\"}),/*#__PURE__*/_jsx(\"g\",{className:\"district-borders\"}),/*#__PURE__*/_jsx(\"g\",{className:\"circles\"}),/*#__PURE__*/_jsx(\"g\",{className:\"spikes\"})]}),noDistrictData&&(statisticConfig===null||statisticConfig===void 0?void 0:statisticConfig.hasPrimary)&&/*#__PURE__*/_jsxs(\"div\",{className:classnames('disclaimer',\"is-\".concat(statistic)),children:[/*#__PURE__*/_jsx(AlertIcon,{}),/*#__PURE__*/_jsx(\"span\",{children:t('District-wise data not available in state bulletin')})]})]}),mapScale&&/*#__PURE__*/_jsx(MapLegend,{data:data,statistic:statistic,mapViz:mapViz,mapScale:mapScale}),/*#__PURE__*/_jsx(\"svg\",{style:{position:'absolute',height:0},children:/*#__PURE__*/_jsx(\"defs\",{children:/*#__PURE__*/_jsx(\"filter\",{id:\"balance-color\",colorInterpolationFilters:\"sRGB\",children:/*#__PURE__*/_jsx(\"feColorMatrix\",{type:\"matrix\",values:\"0.91372549  0           0            0  0.08627451 0           0.91372549  0            0  0.08627451 0           0           0.854901961  0  0.145098039 0           0           0            1  0\"})})})})]});}export default MapVisualizer;","map":{"version":3,"sources":["/Users/nawaf/code/Create-a-D3-Dashboard-With-React-/src/components/MapVisualizer.js"],"names":["MapLegend","D3_TRANSITION_DURATION","MAP_DIMENSIONS","MAP_META","MAP_TYPES","MAP_VIZS","STATE_CODES","STATE_NAMES","STATISTIC_CONFIGS","UNKNOWN_DISTRICT_KEY","formatNumber","spike","toTitleCase","AlertIcon","classnames","max","json","geoIdentity","geoPath","scaleLinear","scaleSqrt","scaleSequential","interpolateReds","interpolateBlues","interpolateGreens","interpolateGreys","interpolatePurples","interpolateOranges","interpolatePiYG","select","transition","useCallback","useEffect","useMemo","useRef","useTranslation","useHistory","useSWR","feature","mesh","colorInterpolator","statistic","t","category","MapVisualizer","mapCode","isDistrictView","mapViz","data","regionHighlighted","setRegionHighlighted","getMapStatistic","transformStatistic","noDistrictData","svgRef","mapMeta","history","geoDataFile","file","x","console","log","suspense","revalidateOnFocus","geoData","statisticTotal","statisticConfig","strokeColor","alpha","color","features","featuresWrap","objects","states","mapType","COUNTRY","CHOROPLETH","districts","map","district","properties","state","st_nm","obj","Object","assign","id","districtsSet","reduce","stateCodes","stateCode","Set","add","statisticMax","keys","filter","includes","districtData","res","districtName","has","push","mapScale","BUBBLE","Math","clamp","nice","SPIKE","mapConfig","colorScale","fillColor","d","stateData","n","populateTexts","regionSelection","text","nonLinear","onceTouchedRegion","svg","current","attr","on","path","T","duration","selectAll","join","enter","append","style","event","update","exit","remove","stopPropagation","STATE","window","innerWidth","call","sel","bind","sortedFeatures","value","sort","featureA","featureB","centroid","requestIdleCallback","meshStates","meshDistricts","stateName","highlighted","each","parentNode","appendChild","zone","hasPrimary","position","height"],"mappings":"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","sourcesContent":["import MapLegend from './MapLegend';\n\nimport {\n  D3_TRANSITION_DURATION,\n  MAP_DIMENSIONS,\n  MAP_META,\n  MAP_TYPES,\n  MAP_VIZS,\n  STATE_CODES,\n  STATE_NAMES,\n  STATISTIC_CONFIGS,\n  UNKNOWN_DISTRICT_KEY,\n} from '../constants';\nimport {formatNumber, spike, toTitleCase} from '../utils/commonFunctions';\n\nimport {AlertIcon} from '@primer/octicons-react';\nimport classnames from 'classnames';\nimport {max} from 'd3-array';\nimport {json} from 'd3-fetch';\nimport {geoIdentity, geoPath} from 'd3-geo';\nimport {scaleLinear, scaleSqrt, scaleSequential} from 'd3-scale';\nimport {\n  interpolateReds,\n  interpolateBlues,\n  interpolateGreens,\n  interpolateGreys,\n  interpolatePurples,\n  interpolateOranges,\n  interpolatePiYG,\n} from 'd3-scale-chromatic';\nimport {select} from 'd3-selection';\nimport {transition} from 'd3-transition';\nimport {useCallback, useEffect, useMemo, useRef} from 'react';\nimport {useTranslation} from 'react-i18next';\nimport {useHistory} from 'react-router-dom';\nimport useSWR from 'swr';\nimport {feature, mesh} from 'topojson-client';\n\nconst colorInterpolator = (statistic) => {\n  if (statistic === 'confirmed') {\n    return (t) => interpolateReds(t * 0.85);\n  } else if (statistic === 'active') {\n    return (t) => interpolateBlues(t * 0.85);\n  } else if (statistic === 'recovered') {\n    return (t) => interpolateGreens(t * 0.85);\n  } else if (statistic === 'deceased') {\n    return (t) => interpolateGreys(t * 0.85);\n  } else if (statistic === 'tested') {\n    return (t) => interpolatePurples(t * 0.85);\n  } else if (\n    statistic === 'tpr' ||\n    statistic === 'cfr' ||\n    statistic === 'other'\n  ) {\n    return (t) => interpolateOranges(t * 0.85);\n  } else if (STATISTIC_CONFIGS[statistic]?.category === 'vaccinated') {\n    return (t) => interpolatePiYG(0.15 + 0.35 * (1 - t));\n  } else {\n    return (t) => interpolateOranges(t * 0.85);\n  }\n};\n\nfunction MapVisualizer({\n  mapCode,\n  isDistrictView,\n  mapViz,\n  data,\n  regionHighlighted,\n  setRegionHighlighted,\n  statistic,\n  getMapStatistic,\n  transformStatistic,\n  noDistrictData,\n}) {\n  const {t} = useTranslation();\n  const svgRef = useRef(null);\n\n  const mapMeta = MAP_META[mapCode];\n  const history = useHistory();\n\n  const {data: geoData} = useSWR(\n    mapMeta.geoDataFile,\n    async (file) => {\n      const x = await json(file);\n      console.log(x)\n      return x;\n    },\n    {suspense: false, revalidateOnFocus: false}\n  );\n\n  const statisticTotal = useMemo(() => {\n    return getMapStatistic(data[mapCode]);\n  }, [data, mapCode, getMapStatistic]);\n\n  const statisticConfig = STATISTIC_CONFIGS[statistic];\n\n  const strokeColor = useCallback(\n    (alpha) => (statisticConfig?.color || '#343a40') + alpha,\n    [statisticConfig]\n  );\n\n  const features = useMemo(() => {\n    if (!geoData) return null;\n\n    const featuresWrap = !isDistrictView\n      ? feature(geoData, geoData.objects.states).features\n      : mapMeta.mapType === MAP_TYPES.COUNTRY && mapViz !== MAP_VIZS.CHOROPLETH\n      ? [\n          ...feature(geoData, geoData.objects.states).features,\n          ...feature(geoData, geoData.objects.districts).features,\n        ]\n      : feature(geoData, geoData.objects.districts).features;\n    // Add id to each feature\n    return featuresWrap.map((feature) => {\n      const district = feature.properties.district;\n      const state = feature.properties.st_nm;\n      const obj = Object.assign({}, feature);\n      obj.id = `${mapCode}-${state}${district ? '-' + district : ''}`;\n      return obj;\n    });\n  }, [geoData, mapCode, isDistrictView, mapViz, mapMeta]);\n\n  const districtsSet = useMemo(() => {\n    if (!geoData || !isDistrictView) return {};\n    return feature(geoData, geoData.objects.districts).features.reduce(\n      (stateCodes, feature) => {\n        const stateCode = STATE_CODES[feature.properties.st_nm];\n        if (!stateCodes[stateCode]) {\n          stateCodes[stateCode] = new Set();\n        }\n        stateCodes[stateCode].add(feature.properties.district);\n        return stateCodes;\n      },\n      {}\n    );\n  }, [geoData, isDistrictView]);\n\n  const statisticMax = useMemo(() => {\n    const stateCodes = Object.keys(data).filter(\n      (stateCode) =>\n        stateCode !== 'TT' && Object.keys(MAP_META).includes(stateCode)\n    );\n\n    if (!isDistrictView) {\n      return max(stateCodes, (stateCode) =>\n        transformStatistic(getMapStatistic(data[stateCode]))\n      );\n    } else {\n      const districtData = stateCodes.reduce((res, stateCode) => {\n        const districts = Object.keys(data[stateCode]?.districts || []).filter(\n          (districtName) =>\n            (districtsSet?.[stateCode] || new Set()).has(districtName) ||\n            (mapViz !== MAP_VIZS.CHOROPLETH &&\n              districtName === UNKNOWN_DISTRICT_KEY)\n        );\n        res.push(\n          ...districts.map((districtName) =>\n            transformStatistic(\n              getMapStatistic(data[stateCode].districts[districtName])\n            )\n          )\n        );\n        return res;\n      }, []);\n      return max(districtData);\n    }\n  }, [\n    data,\n    isDistrictView,\n    getMapStatistic,\n    mapViz,\n    districtsSet,\n    transformStatistic,\n  ]);\n\n  const mapScale = useMemo(() => {\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      // No negative values\n      return scaleSqrt([0, Math.max(1, statisticMax || 0)], [0, 40])\n        .clamp(true)\n        .nice(3);\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      return scaleLinear([0, Math.max(1, statisticMax || 0)], [0, 80])\n        .clamp(true)\n        .nice(3);\n    } else if (STATISTIC_CONFIGS[statistic]?.mapConfig?.colorScale) {\n      return STATISTIC_CONFIGS[statistic].mapConfig.colorScale;\n    } else {\n      // No negative values\n      return scaleSequential(\n        [0, Math.max(1, statisticMax || 0)],\n        colorInterpolator(statistic)\n      ).clamp(true);\n    }\n  }, [mapViz, statistic, statisticMax]);\n\n  const fillColor = useCallback(\n    (d) => {\n      if (mapViz === MAP_VIZS.CHOROPLETH) {\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        const district = d.properties.district;\n        const stateData = data[stateCode];\n        const districtData = stateData?.districts?.[district];\n        const n = transformStatistic(\n          getMapStatistic(district ? districtData : stateData)\n        );\n        const color = n ? mapScale(n) : '#ffffff00';\n        return color;\n      }\n    },\n    [mapViz, data, mapScale, getMapStatistic, transformStatistic]\n  );\n\n  const populateTexts = useCallback(\n    (regionSelection) => {\n      regionSelection.select('title').text((d) => {\n        if (mapViz !== MAP_VIZS.CHOROPLETH && !statisticConfig?.nonLinear) {\n          const state = d.properties.st_nm;\n          const stateCode = STATE_CODES[state];\n          const district = d.properties.district;\n\n          const stateData = data[stateCode];\n          const districtData = stateData?.districts?.[district];\n          let n;\n          if (district) n = getMapStatistic(districtData);\n          else n = getMapStatistic(stateData);\n          return `${formatNumber(\n            100 * (n / (statisticTotal || 0.001)),\n            '%'\n          )} from ${toTitleCase(district ? district : state)}`;\n        }\n      });\n    },\n    [mapViz, data, getMapStatistic, statisticTotal, statisticConfig]\n  );\n\n  const onceTouchedRegion = useRef(null);\n\n  // Reset on tapping outside map\n  useEffect(() => {\n    const svg = select(svgRef.current);\n\n    svg.attr('pointer-events', 'auto').on('click', () => {\n      onceTouchedRegion.current = null;\n      setRegionHighlighted({\n        stateCode: mapCode,\n        districtName: null,\n      });\n    });\n  }, [mapCode, setRegionHighlighted]);\n\n  const path = useMemo(() => {\n    if (!geoData) return null;\n    return geoPath(geoIdentity());\n  }, [geoData]);\n\n  // Choropleth\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    svg\n      .select('.regions')\n      .selectAll('path')\n      .data(mapViz === MAP_VIZS.CHOROPLETH ? features : [], (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('stroke-width', 1.8)\n            .attr('stroke-opacity', 0)\n            .style('cursor', 'pointer')\n            .on('mouseenter', (event, d) => {\n              if (onceTouchedRegion.current) return;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .on('pointerdown', (event, d) => {\n              if (onceTouchedRegion.current === d)\n                onceTouchedRegion.current = null;\n              else onceTouchedRegion.current = d;\n              setRegionHighlighted({\n                stateCode: STATE_CODES[d.properties.st_nm],\n                districtName: d.properties.district,\n              });\n            })\n            .attr('fill', '#fff0')\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) =>\n          exit\n            .transition(T)\n            .attr('stroke', '#fff0')\n            .attr('fill', '#fff0')\n            .remove()\n      )\n      .attr('pointer-events', 'all')\n      .on('click', (event, d) => {\n        event.stopPropagation();\n        const stateCode = STATE_CODES[d.properties.st_nm];\n        if (\n          onceTouchedRegion.current ||\n          mapMeta.mapType === MAP_TYPES.STATE ||\n          !data[stateCode]?.districts\n        )\n          return;\n        // Disable pointer events till the new map is rendered\n        svg.attr('pointer-events', 'none');\n        svg.select('.regions').selectAll('path').attr('pointer-events', 'none');\n        // Switch map\n        history.push(\n          `/state/${stateCode}${window.innerWidth < 769 ? '#MapExplorer' : ''}`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', fillColor)\n          .attr('stroke', strokeColor.bind(this, ''));\n      });\n  }, [\n    mapViz,\n    data,\n    features,\n    fillColor,\n    geoData,\n    history,\n    mapMeta.mapType,\n    path,\n    setRegionHighlighted,\n    strokeColor,\n  ]);\n\n  const sortedFeatures = useMemo(() => {\n    if (mapViz === MAP_VIZS.CHOROPLETH) {\n      return [];\n    } else {\n      return (features || [])\n        .map((feature) => {\n          const stateCode = STATE_CODES[feature.properties.st_nm];\n          const districtName = feature.properties.district;\n          const stateData = data[stateCode];\n\n          if (!isDistrictView) {\n            feature.value = getMapStatistic(stateData);\n          } else {\n            const districtData = stateData?.districts?.[districtName];\n\n            if (districtName) feature.value = getMapStatistic(districtData);\n            else\n              feature.value = getMapStatistic(\n                stateData?.districts?.[UNKNOWN_DISTRICT_KEY]\n              );\n          }\n\n          return feature;\n        })\n        .filter((feature) => feature.value > 0)\n        .sort((featureA, featureB) => featureB.value - featureB.value);\n    }\n  }, [mapViz, isDistrictView, getMapStatistic, features, data]);\n\n  // Bubble\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.circles')\n      .selectAll('circle')\n      .data(\n        mapViz === MAP_VIZS.BUBBLE ? sortedFeatures : [],\n        (feature) => feature.id\n      )\n      .join(\n        (enter) =>\n          enter\n            .append('circle')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) => exit.call((exit) => exit.transition(T).attr('r', 0).remove())\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('fill', statisticConfig.color + '70')\n          .attr('stroke', statisticConfig.color + '70')\n          .attr('r', (feature) => mapScale(feature.value));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    sortedFeatures,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statisticConfig,\n    getMapStatistic,\n  ]);\n\n  // Spike (Note: bad unmodular code)\n  useEffect(() => {\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    const regionSelection = svg\n      .select('.spikes')\n      .selectAll('path')\n      .data(\n        mapViz === MAP_VIZS.SPIKE ? sortedFeatures : [],\n        (feature) => feature.id,\n        (feature) => feature.id\n      )\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr(\n              'transform',\n              (feature) => `translate(${path.centroid(feature)})`\n            )\n            .attr('opacity', 0)\n            .attr('fill-opacity', 0.25)\n            .style('cursor', 'pointer')\n            .attr('pointer-events', 'all')\n            .attr('d', spike(0))\n            .call((enter) => {\n              enter.append('title');\n            }),\n        (update) => update,\n        (exit) =>\n          exit.call((exit) =>\n            exit.transition(T).attr('opacity', 0).attr('d', spike(0)).remove()\n          )\n      )\n      .on('mouseenter', (event, feature) => {\n        if (onceTouchedRegion.current) return;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('pointerdown', (event, feature) => {\n        if (onceTouchedRegion.current === feature)\n          onceTouchedRegion.current = null;\n        else onceTouchedRegion.current = feature;\n        setRegionHighlighted({\n          stateCode: STATE_CODES[feature.properties.st_nm],\n          districtName: !isDistrictView\n            ? null\n            : feature.properties.district || UNKNOWN_DISTRICT_KEY,\n        });\n      })\n      .on('click', (event, feature) => {\n        event.stopPropagation();\n        if (onceTouchedRegion.current || mapMeta.mapType === MAP_TYPES.STATE)\n          return;\n        history.push(\n          `/state/${STATE_CODES[feature.properties.st_nm]}${\n            window.innerWidth < 769 ? '#MapExplorer' : ''\n          }`\n        );\n      })\n      .call((sel) => {\n        sel\n          .transition(T)\n          .attr('opacity', 1)\n          .attr('fill', statisticConfig.color + '70')\n          .attr('stroke', statisticConfig.color + '70')\n          .attr('d', (feature) => spike(mapScale(feature.value)));\n      });\n\n    window.requestIdleCallback(() => {\n      populateTexts(regionSelection);\n    });\n  }, [\n    mapMeta.mapType,\n    mapViz,\n    isDistrictView,\n    sortedFeatures,\n    history,\n    mapScale,\n    path,\n    setRegionHighlighted,\n    populateTexts,\n    statisticConfig,\n    getMapStatistic,\n  ]);\n\n  // Boundaries\n  useEffect(() => {\n    if (!geoData) return;\n    const svg = select(svgRef.current);\n    const T = transition().duration(D3_TRANSITION_DURATION);\n\n    let meshStates = [];\n    let meshDistricts = [];\n\n    if (mapMeta.mapType === MAP_TYPES.COUNTRY) {\n      meshStates = [mesh(geoData, geoData.objects.states)];\n      meshStates[0].id = `${mapCode}-states`;\n    }\n\n    if (\n      mapMeta.mapType === MAP_TYPES.STATE ||\n      (isDistrictView && mapViz === MAP_VIZS.CHOROPLETH)\n    ) {\n      // Add id to mesh\n      meshDistricts = [mesh(geoData, geoData.objects.districts)];\n      meshDistricts[0].id = `${mapCode}-districts`;\n    }\n\n    svg\n      .select('.state-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshStates, (d) => d.id)\n      .join(\n        (enter) => enter.append('path').attr('d', path).attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n\n    svg\n      .select('.district-borders')\n      .attr('fill', 'none')\n      .attr('stroke-width', 1.5)\n      .selectAll('path')\n      .data(meshDistricts, (d) => d.id)\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('d', path)\n            .attr('d', path)\n            .attr('stroke', '#fff0'),\n        (update) => update,\n        (exit) => exit.transition(T).attr('stroke', '#fff0').remove()\n      )\n      .transition(T)\n      .attr('stroke', strokeColor.bind(this, '40'));\n  }, [\n    geoData,\n    mapMeta,\n    mapCode,\n    mapViz,\n    isDistrictView,\n    statistic,\n    path,\n    strokeColor,\n  ]);\n\n  // Highlight\n  useEffect(() => {\n    const stateCode = regionHighlighted.stateCode;\n    const stateName = STATE_NAMES[stateCode];\n    const district = regionHighlighted.districtName;\n\n    const svg = select(svgRef.current);\n\n    if (mapViz === MAP_VIZS.BUBBLE) {\n      svg\n        .select('.circles')\n        .selectAll('circle')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else if (mapViz === MAP_VIZS.SPIKE) {\n      svg\n        .select('.spikes')\n        .selectAll('path')\n        .attr('fill-opacity', (d) => {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView ||\n              (district === UNKNOWN_DISTRICT_KEY && !d.properties.district));\n          return highlighted ? 1 : 0.25;\n        });\n    } else {\n      svg\n        .select('.regions')\n        .selectAll('path')\n        .each(function (d) {\n          const highlighted =\n            stateName === d.properties.st_nm &&\n            ((!district && stateCode !== mapCode) ||\n              district === d.properties?.district ||\n              !isDistrictView);\n          if (highlighted) this.parentNode.appendChild(this);\n          select(this).attr('stroke-opacity', highlighted ? 1 : 0);\n        });\n    }\n  }, [\n    geoData,\n    data,\n    mapCode,\n    isDistrictView,\n    mapViz,\n    regionHighlighted.stateCode,\n    regionHighlighted.districtName,\n    statistic,\n  ]);\n\n  return (\n    <>\n      <div className=\"svg-parent\">\n        <svg\n          id=\"chart\"\n          className={classnames({\n            zone: !!statisticConfig?.mapConfig?.colorScale,\n          })}\n          viewBox={`0 0 ${MAP_DIMENSIONS[0]} ${MAP_DIMENSIONS[1]}`}\n          preserveAspectRatio=\"xMidYMid meet\"\n          ref={svgRef}\n        >\n          <g className=\"regions\" />\n          <g className=\"state-borders\" />\n          <g className=\"district-borders\" />\n          <g className=\"circles\" />\n          <g className=\"spikes\" />\n        </svg>\n        {noDistrictData && statisticConfig?.hasPrimary && (\n          <div className={classnames('disclaimer', `is-${statistic}`)}>\n            <AlertIcon />\n            <span>\n              {t('District-wise data not available in state bulletin')}\n            </span>\n          </div>\n        )}\n      </div>\n\n      {mapScale && <MapLegend {...{data, statistic, mapViz, mapScale}} />}\n\n      <svg style={{position: 'absolute', height: 0}}>\n        <defs>\n          <filter id=\"balance-color\" colorInterpolationFilters=\"sRGB\">\n            <feColorMatrix\n              type=\"matrix\"\n              values=\"0.91372549  0           0            0  0.08627451\n                      0           0.91372549  0            0  0.08627451\n                      0           0           0.854901961  0  0.145098039\n                      0           0           0            1  0\"\n            />\n          </filter>\n        </defs>\n      </svg>\n    </>\n  );\n}\n\nexport default MapVisualizer;\n"]},"metadata":{},"sourceType":"module"}